{
  "uid" : "49bb2377182239fe",
  "name" : "test_tag_user",
  "fullName" : "test.test_messages_functionality#test_tag_user",
  "historyId" : "585b036b510637bc4e1227ec18f2d0bf",
  "time" : {
    "start" : 1716798245773,
    "stop" : 1716798246164,
    "duration" : 391
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fd5c21039a0>\n\n    @allure.feature(\"Tagging Players\")\n    @allure.story(\"Tagging player in chat\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_tag_user(api_client):\n        with allure.step(\"Tagging player in chat\"):\n            data = {\"body\": \"@testchat100 text tag player\", \"mention\": [api_client.senderid_adm], \"msgtype\": \"m.text\",\n                    \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:118: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "init_authorization",
    "time" : {
      "start" : 1716798193817,
      "stop" : 1716798195785,
      "duration" : 1968
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1716798193817,
      "stop" : 1716798193817,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_client",
    "time" : {
      "start" : 1716798195785,
      "stop" : 1716798195785,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fd5c21039a0>\n\n    @allure.feature(\"Tagging Players\")\n    @allure.story(\"Tagging player in chat\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_tag_user(api_client):\n        with allure.step(\"Tagging player in chat\"):\n            data = {\"body\": \"@testchat100 text tag player\", \"mention\": [api_client.senderid_adm], \"msgtype\": \"m.text\",\n                    \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:118: AssertionError",
    "steps" : [ {
      "name" : "Tagging player in chat",
      "time" : {
        "start" : 1716798245773,
        "stop" : 1716798246163,
        "duration" : 390
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 118, in test_tag_user\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Check response code",
        "time" : {
          "start" : 1716798246163,
          "stop" : 1716798246163,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 118, in test_tag_user\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1716798251521,
      "stop" : 1716798251521,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Tagging Players"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "Tagging player in chat"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "9b864710abbd"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 12,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 165,
        "unknown" : 0,
        "total" : 181
      },
      "items" : [ {
        "uid" : "bd604b8722b2c949",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716772783640,
          "stop" : 1716772783780,
          "duration" : 140
        }
      }, {
        "uid" : "56aab700f3927c6b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716741149436,
          "stop" : 1716741149879,
          "duration" : 443
        }
      }, {
        "uid" : "4354649799271832",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716711753215,
          "stop" : 1716711753412,
          "duration" : 197
        }
      }, {
        "uid" : "1982a94596870f7f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716686648277,
          "stop" : 1716686648890,
          "duration" : 613
        }
      }, {
        "uid" : "172a0ee0fa40c9b2",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716654098692,
          "stop" : 1716654099350,
          "duration" : 658
        }
      }, {
        "uid" : "1ef32df18a67d4a6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716625388256,
          "stop" : 1716625388915,
          "duration" : 659
        }
      }, {
        "uid" : "bf0fa1d711042137",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716599833309,
          "stop" : 1716599833765,
          "duration" : 456
        }
      }, {
        "uid" : "49618427ab708fca",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716567738030,
          "stop" : 1716567738507,
          "duration" : 477
        }
      }, {
        "uid" : "8f23552a9977871c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716539026369,
          "stop" : 1716539026996,
          "duration" : 627
        }
      }, {
        "uid" : "8c0ec2c8754bc189",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716513520102,
          "stop" : 1716513521582,
          "duration" : 1480
        }
      }, {
        "uid" : "bca69a33a11f7c0b",
        "status" : "passed",
        "time" : {
          "start" : 1716481519089,
          "stop" : 1716481519621,
          "duration" : 532
        }
      }, {
        "uid" : "cef05f5c894bf556",
        "status" : "passed",
        "time" : {
          "start" : 1716452597242,
          "stop" : 1716452597667,
          "duration" : 425
        }
      }, {
        "uid" : "e9fbda82852ab607",
        "status" : "passed",
        "time" : {
          "start" : 1716427082150,
          "stop" : 1716427082893,
          "duration" : 743
        }
      }, {
        "uid" : "50cdd9445204f2dd",
        "status" : "passed",
        "time" : {
          "start" : 1716395149640,
          "stop" : 1716395150718,
          "duration" : 1078
        }
      }, {
        "uid" : "854c9c99eacb4951",
        "status" : "passed",
        "time" : {
          "start" : 1716366285262,
          "stop" : 1716366285705,
          "duration" : 443
        }
      }, {
        "uid" : "d27bc461803c68e2",
        "status" : "passed",
        "time" : {
          "start" : 1716340727799,
          "stop" : 1716340728210,
          "duration" : 411
        }
      }, {
        "uid" : "cfe13c1d4148c23f",
        "status" : "passed",
        "time" : {
          "start" : 1716308593707,
          "stop" : 1716308594160,
          "duration" : 453
        }
      }, {
        "uid" : "111f74a00498469f",
        "status" : "passed",
        "time" : {
          "start" : 1716279821364,
          "stop" : 1716279821832,
          "duration" : 468
        }
      }, {
        "uid" : "b4c088169b076f31",
        "status" : "passed",
        "time" : {
          "start" : 1716254295280,
          "stop" : 1716254296460,
          "duration" : 1180
        }
      }, {
        "uid" : "16573c8b992650d0",
        "status" : "passed",
        "time" : {
          "start" : 1716222263039,
          "stop" : 1716222263946,
          "duration" : 907
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "49bb2377182239fe.json",
  "parameterValues" : [ ]
}