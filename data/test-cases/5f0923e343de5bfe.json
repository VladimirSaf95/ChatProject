{
  "uid" : "5f0923e343de5bfe",
  "name" : "test_unblock_players",
  "fullName" : "test.test_block_and_unblock#test_unblock_players",
  "historyId" : "7c0ba69dbab38077018a8fbc2f4cc147",
  "time" : {
    "start" : 1716826946606,
    "stop" : 1716826970579,
    "duration" : 23973
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: The 'total' value did not decrease by one\nassert 0 == (0 - 1)",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fc45115d820>\n\n    @pytest.mark.dependency(depends=[\"block_players\"])\n    @allure.feature(\"User Management\")\n    @allure.story(\"Unblocking Players\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_unblock_players(api_client):\n        with allure.step(\"Waiting for previous operations to complete\"):\n            # Задержка по времени необходимо для того, чтобы успел отработать запрос по блокировке игрока\n            time.sleep(20)\n    \n        with allure.step(\"Fetching information about blocked players before unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ДО\n            getuserbanbefore = api_client.getuserban()\n            total_before = getuserbanbefore.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Preparing data for unblocking user\"):\n            # Подготовка данных для POST-запроса\n            data = {\n                \"nodeUid\": api_client.xnodeid,\n                \"roomUid\": api_client.roomB,\n                \"userUid\": f\"@{api_client.senderid}\"\n            }\n    \n            # Используйте quote для каждого параметра, который требует URL-кодирования\n            url = (\n                f\"api/v1/synapse/user/ban?\"\n                f\"nodeUid={quote(api_client.xnodeid)}&\"\n                f\"userUid={quote(f'@{api_client.senderid}')}%3A{api_client.room_second_part}&\"\n                f\"roomUid={quote(api_client.roomB)}%3A{api_client.room_second_part}&\"\n            )\n    \n        with allure.step(\"Sending request to unblock user\"):\n            response = api_client.delete_token_s(url, json=data)\n            # Необходима задержка, чтобы успел отработать запрос на получение забаненных юзеров\n            time.sleep(3)\n            print(\"URL запроса:\", response.url)\n    \n        with allure.step(\"Asserting response status code\"):\n            assert response.status_code == 200, \"Response status code is not 200\"\n    \n        with allure.step(\"Fetching information about blocked players after unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ПОСЛЕ\n            getuserbanafter = api_client.getuserban()\n            total_after = getuserbanafter.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Asserting response content\"):\n            # Проверка, что нужный ключ есть в ответе\n            assert \"total\" in getuserbanbefore.json()[\"pagination\"], \"The key 'total' is not found in the JSON response before\"\n            assert \"total\" in getuserbanafter.json()[\"pagination\"], \"The key 'total' is not found in the JSON response after\"\n    \n            # Проверка, что забаненных игроков уменьшилось на один\n>           assert total_after == total_before - 1, \"The 'total' value did not decrease by one\"\nE           AssertionError: The 'total' value did not decrease by one\nE           assert 0 == (0 - 1)\n\ntest/test_block_and_unblock.py:148: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1716826938617,
      "stop" : 1716826938617,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1716826935518,
      "stop" : 1716826935518,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1716826935518,
      "stop" : 1716826938617,
      "duration" : 3099
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: The 'total' value did not decrease by one\nassert 0 == (0 - 1)",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fc45115d820>\n\n    @pytest.mark.dependency(depends=[\"block_players\"])\n    @allure.feature(\"User Management\")\n    @allure.story(\"Unblocking Players\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_unblock_players(api_client):\n        with allure.step(\"Waiting for previous operations to complete\"):\n            # Задержка по времени необходимо для того, чтобы успел отработать запрос по блокировке игрока\n            time.sleep(20)\n    \n        with allure.step(\"Fetching information about blocked players before unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ДО\n            getuserbanbefore = api_client.getuserban()\n            total_before = getuserbanbefore.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Preparing data for unblocking user\"):\n            # Подготовка данных для POST-запроса\n            data = {\n                \"nodeUid\": api_client.xnodeid,\n                \"roomUid\": api_client.roomB,\n                \"userUid\": f\"@{api_client.senderid}\"\n            }\n    \n            # Используйте quote для каждого параметра, который требует URL-кодирования\n            url = (\n                f\"api/v1/synapse/user/ban?\"\n                f\"nodeUid={quote(api_client.xnodeid)}&\"\n                f\"userUid={quote(f'@{api_client.senderid}')}%3A{api_client.room_second_part}&\"\n                f\"roomUid={quote(api_client.roomB)}%3A{api_client.room_second_part}&\"\n            )\n    \n        with allure.step(\"Sending request to unblock user\"):\n            response = api_client.delete_token_s(url, json=data)\n            # Необходима задержка, чтобы успел отработать запрос на получение забаненных юзеров\n            time.sleep(3)\n            print(\"URL запроса:\", response.url)\n    \n        with allure.step(\"Asserting response status code\"):\n            assert response.status_code == 200, \"Response status code is not 200\"\n    \n        with allure.step(\"Fetching information about blocked players after unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ПОСЛЕ\n            getuserbanafter = api_client.getuserban()\n            total_after = getuserbanafter.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Asserting response content\"):\n            # Проверка, что нужный ключ есть в ответе\n            assert \"total\" in getuserbanbefore.json()[\"pagination\"], \"The key 'total' is not found in the JSON response before\"\n            assert \"total\" in getuserbanafter.json()[\"pagination\"], \"The key 'total' is not found in the JSON response after\"\n    \n            # Проверка, что забаненных игроков уменьшилось на один\n>           assert total_after == total_before - 1, \"The 'total' value did not decrease by one\"\nE           AssertionError: The 'total' value did not decrease by one\nE           assert 0 == (0 - 1)\n\ntest/test_block_and_unblock.py:148: AssertionError",
    "steps" : [ {
      "name" : "Waiting for previous operations to complete",
      "time" : {
        "start" : 1716826946606,
        "stop" : 1716826966626,
        "duration" : 20020
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Fetching information about blocked players before unblocking",
      "time" : {
        "start" : 1716826966627,
        "stop" : 1716826966849,
        "duration" : 222
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Preparing data for unblocking user",
      "time" : {
        "start" : 1716826966849,
        "stop" : 1716826966849,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Sending request to unblock user",
      "time" : {
        "start" : 1716826966849,
        "stop" : 1716826970338,
        "duration" : 3489
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Asserting response status code",
      "time" : {
        "start" : 1716826970338,
        "stop" : 1716826970338,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Fetching information about blocked players after unblocking",
      "time" : {
        "start" : 1716826970338,
        "stop" : 1716826970578,
        "duration" : 240
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Asserting response content",
      "time" : {
        "start" : 1716826970578,
        "stop" : 1716826970578,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: The 'total' value did not decrease by one\nassert 0 == (0 - 1)\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_block_and_unblock.py\", line 148, in test_unblock_players\n    assert total_after == total_before - 1, \"The 'total' value did not decrease by one\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 7,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1716827650909,
      "stop" : 1716827650909,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "User Management"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "story",
    "value" : "Unblocking Players"
  }, {
    "name" : "tag",
    "value" : "dependency(depends=['block_players'])"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_block_and_unblock"
  }, {
    "name" : "host",
    "value" : "be94021775f0"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_block_and_unblock"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 16,
        "skipped" : 0,
        "passed" : 163,
        "unknown" : 0,
        "total" : 182
      },
      "items" : [ {
        "uid" : "a36eb5313b281f9d",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716798196655,
          "stop" : 1716798216794,
          "duration" : 20139
        }
      }, {
        "uid" : "cc7ac5779cc28644",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716772737347,
          "stop" : 1716772757493,
          "duration" : 20146
        }
      }, {
        "uid" : "112ed09220fe6546",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716740525553,
          "stop" : 1716740545723,
          "duration" : 20170
        }
      }, {
        "uid" : "81aab0435c3e45a5",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716711704110,
          "stop" : 1716711724316,
          "duration" : 20206
        }
      }, {
        "uid" : "9a96633f9c03cab9",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716686599614,
          "stop" : 1716686619842,
          "duration" : 20228
        }
      }, {
        "uid" : "1cebc57925a3cdeb",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716654048007,
          "stop" : 1716654068208,
          "duration" : 20201
        }
      }, {
        "uid" : "82644002b076c8cd",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716625340598,
          "stop" : 1716625361257,
          "duration" : 20659
        }
      }, {
        "uid" : "3f8ca1b795342e0c",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716599786326,
          "stop" : 1716599806497,
          "duration" : 20171
        }
      }, {
        "uid" : "d5d03ff479611a9e",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716567689507,
          "stop" : 1716567709686,
          "duration" : 20179
        }
      }, {
        "uid" : "b81ed0d986b41071",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716538977107,
          "stop" : 1716538997761,
          "duration" : 20654
        }
      }, {
        "uid" : "f97d1d8ffba1118b",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716513470476,
          "stop" : 1716513490834,
          "duration" : 20358
        }
      }, {
        "uid" : "3c33aadd6ced76f5",
        "status" : "passed",
        "time" : {
          "start" : 1716481462313,
          "stop" : 1716481488012,
          "duration" : 25699
        }
      }, {
        "uid" : "8fadbea1adb44cb7",
        "status" : "passed",
        "time" : {
          "start" : 1716452546127,
          "stop" : 1716452571314,
          "duration" : 25187
        }
      }, {
        "uid" : "2e18b47fc77a0fc7",
        "status" : "passed",
        "time" : {
          "start" : 1716427031282,
          "stop" : 1716427056039,
          "duration" : 24757
        }
      }, {
        "uid" : "8224bf05ac0f7091",
        "status" : "passed",
        "time" : {
          "start" : 1716395092685,
          "stop" : 1716395117859,
          "duration" : 25174
        }
      }, {
        "uid" : "8b1f16f6ee497e5c",
        "status" : "passed",
        "time" : {
          "start" : 1716366230468,
          "stop" : 1716366256506,
          "duration" : 26038
        }
      }, {
        "uid" : "5a7760d6d5129d81",
        "status" : "passed",
        "time" : {
          "start" : 1716340678338,
          "stop" : 1716340702837,
          "duration" : 24499
        }
      }, {
        "uid" : "ebe4b738325296cd",
        "status" : "passed",
        "time" : {
          "start" : 1716308541048,
          "stop" : 1716308566307,
          "duration" : 25259
        }
      }, {
        "uid" : "5566664d001c6030",
        "status" : "passed",
        "time" : {
          "start" : 1716279765876,
          "stop" : 1716279791144,
          "duration" : 25268
        }
      }, {
        "uid" : "c4d9bda2333b20bc",
        "status" : "passed",
        "time" : {
          "start" : 1716254238956,
          "stop" : 1716254265878,
          "duration" : 26922
        }
      } ]
    },
    "tags" : [ "dependency(depends=['block_players'])" ]
  },
  "source" : "5f0923e343de5bfe.json",
  "parameterValues" : [ ]
}