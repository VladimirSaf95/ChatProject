{
  "uid" : "20306c4db0c7bf7d",
  "name" : "test_block_players",
  "fullName" : "test.test_block_and_unblock#test_block_players",
  "historyId" : "d38eeef11179490ead748d140d16f0e6",
  "time" : {
    "start" : 1716859082245,
    "stop" : 1716859090224,
    "duration" : 7979
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: The 'total' value did not increase by one\nassert 0 == (0 + 1)",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f5fe593bfd0>\n\n    @pytest.mark.dependency(name=\"block_players\")\n    @allure.feature(\"Player Blocking\")\n    @allure.story(\"Player Blocking Test\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_block_players(api_client):\n        with allure.step(\"Getting information about banned players before the test\"):\n            getuserbanbefore = api_client.getuserban()\n            total_before = getuserbanbefore.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Sending message and blocking player\"):\n            event_id = os.environ.get(\"EVENT_ID_B\")\n            if event_id is None:\n                api_client.sendmessages(response_a=False)\n                event_id = os.environ.get(\"EVENT_ID_B\")\n    \n            data = {\n                \"autoBanned\": False,\n                \"nodeUid\": api_client.xnodeid,\n                \"roomUid\": api_client.roomB,\n                \"userUid\": f\"@{api_client.senderid}\",\n                \"blockedBy\": f\"@{api_client.senderid_adm}:{api_client.room_second_part}\",\n                \"message\": \"Text Test\",\n                \"duration\": 3600,\n                \"messageId\": event_id,\n                \"reason\": \"harassmentOffensiveLanguage\",\n                \"nodeId\": api_client.xnodeid\n            }\n    \n            url = (\n                f\"api/v1/synapse/user/ban?\"\n                f\"autoBanned=false&\"\n                f\"nodeUid={quote(api_client.xnodeid)}&\"\n                f\"roomUid={quote(api_client.roomB)}%3A{api_client.room_second_part}&\"\n                f\"userUid={quote(f'@{api_client.senderid}')}%3A{api_client.room_second_part}&\"\n                f\"blockedBy={quote(f'@{api_client.senderid_adm}')}%3A{api_client.room_second_part}&\"\n                f\"message=Text+Test&\"\n                f\"messageId={quote(event_id.encode())}&\"\n                f\"duration=3600&\"\n                f\"reason=harassmentOffensiveLanguage&\"\n                f\"nodeId={quote(api_client.xnodeid)}\"\n            )\n    \n            response = api_client.post_token_s(url, json=data)\n            time.sleep(3)\n    \n        with allure.step(\"Getting information about banned players after the test\"):\n            getuserbanafter = api_client.getuserban()\n            total_after = getuserbanafter.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Verifying response status code\"):\n            assert response.status_code == 200\n    \n        with allure.step(\"Verifying 'total' key in response JSON before and after\"):\n            assert \"total\" in getuserbanbefore.json()[\"pagination\"], \"The key 'total' is not found in the JSON response before\"\n            assert \"total\" in getuserbanafter.json()[\"pagination\"], \"The key 'total' is not found in the JSON response after\"\n    \n        with allure.step(\"Verifying the increase in banned players count\"):\n>           assert total_after == total_before + 1, \"The 'total' value did not increase by one\"\nE           AssertionError: The 'total' value did not increase by one\nE           assert 0 == (0 + 1)\n\ntest/test_block_and_unblock.py:92: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1716859081938,
      "stop" : 1716859081938,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1716859078663,
      "stop" : 1716859078664,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1716859078664,
      "stop" : 1716859081938,
      "duration" : 3274
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: The 'total' value did not increase by one\nassert 0 == (0 + 1)",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f5fe593bfd0>\n\n    @pytest.mark.dependency(name=\"block_players\")\n    @allure.feature(\"Player Blocking\")\n    @allure.story(\"Player Blocking Test\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    def test_block_players(api_client):\n        with allure.step(\"Getting information about banned players before the test\"):\n            getuserbanbefore = api_client.getuserban()\n            total_before = getuserbanbefore.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Sending message and blocking player\"):\n            event_id = os.environ.get(\"EVENT_ID_B\")\n            if event_id is None:\n                api_client.sendmessages(response_a=False)\n                event_id = os.environ.get(\"EVENT_ID_B\")\n    \n            data = {\n                \"autoBanned\": False,\n                \"nodeUid\": api_client.xnodeid,\n                \"roomUid\": api_client.roomB,\n                \"userUid\": f\"@{api_client.senderid}\",\n                \"blockedBy\": f\"@{api_client.senderid_adm}:{api_client.room_second_part}\",\n                \"message\": \"Text Test\",\n                \"duration\": 3600,\n                \"messageId\": event_id,\n                \"reason\": \"harassmentOffensiveLanguage\",\n                \"nodeId\": api_client.xnodeid\n            }\n    \n            url = (\n                f\"api/v1/synapse/user/ban?\"\n                f\"autoBanned=false&\"\n                f\"nodeUid={quote(api_client.xnodeid)}&\"\n                f\"roomUid={quote(api_client.roomB)}%3A{api_client.room_second_part}&\"\n                f\"userUid={quote(f'@{api_client.senderid}')}%3A{api_client.room_second_part}&\"\n                f\"blockedBy={quote(f'@{api_client.senderid_adm}')}%3A{api_client.room_second_part}&\"\n                f\"message=Text+Test&\"\n                f\"messageId={quote(event_id.encode())}&\"\n                f\"duration=3600&\"\n                f\"reason=harassmentOffensiveLanguage&\"\n                f\"nodeId={quote(api_client.xnodeid)}\"\n            )\n    \n            response = api_client.post_token_s(url, json=data)\n            time.sleep(3)\n    \n        with allure.step(\"Getting information about banned players after the test\"):\n            getuserbanafter = api_client.getuserban()\n            total_after = getuserbanafter.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Verifying response status code\"):\n            assert response.status_code == 200\n    \n        with allure.step(\"Verifying 'total' key in response JSON before and after\"):\n            assert \"total\" in getuserbanbefore.json()[\"pagination\"], \"The key 'total' is not found in the JSON response before\"\n            assert \"total\" in getuserbanafter.json()[\"pagination\"], \"The key 'total' is not found in the JSON response after\"\n    \n        with allure.step(\"Verifying the increase in banned players count\"):\n>           assert total_after == total_before + 1, \"The 'total' value did not increase by one\"\nE           AssertionError: The 'total' value did not increase by one\nE           assert 0 == (0 + 1)\n\ntest/test_block_and_unblock.py:92: AssertionError",
    "steps" : [ {
      "name" : "Getting information about banned players before the test",
      "time" : {
        "start" : 1716859082246,
        "stop" : 1716859082967,
        "duration" : 721
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Sending message and blocking player",
      "time" : {
        "start" : 1716859082967,
        "stop" : 1716859089973,
        "duration" : 7006
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Getting information about banned players after the test",
      "time" : {
        "start" : 1716859089973,
        "stop" : 1716859090223,
        "duration" : 250
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verifying response status code",
      "time" : {
        "start" : 1716859090223,
        "stop" : 1716859090223,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verifying 'total' key in response JSON before and after",
      "time" : {
        "start" : 1716859090223,
        "stop" : 1716859090223,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Verifying the increase in banned players count",
      "time" : {
        "start" : 1716859090223,
        "stop" : 1716859090223,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: The 'total' value did not increase by one\nassert 0 == (0 + 1)\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_block_and_unblock.py\", line 92, in test_block_players\n    assert total_after == total_before + 1, \"The 'total' value did not increase by one\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1716859795246,
      "stop" : 1716859795247,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Player Blocking"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "story",
    "value" : "Player Blocking Test"
  }, {
    "name" : "tag",
    "value" : "dependency(name='block_players')"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_block_and_unblock"
  }, {
    "name" : "host",
    "value" : "03633974729f"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_block_and_unblock"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 7,
        "broken" : 16,
        "skipped" : 0,
        "passed" : 160,
        "unknown" : 0,
        "total" : 183
      },
      "items" : [ {
        "uid" : "d9f6457f2e9338b5",
        "status" : "failed",
        "statusDetails" : "AssertionError: The 'total' value did not increase by one\nassert 0 == (0 + 1)",
        "time" : {
          "start" : 1716826939198,
          "stop" : 1716826946566,
          "duration" : 7368
        }
      }, {
        "uid" : "2847da68291ec84e",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716798196225,
          "stop" : 1716798196624,
          "duration" : 399
        }
      }, {
        "uid" : "61efbd13e12cb467",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716772736919,
          "stop" : 1716772737314,
          "duration" : 395
        }
      }, {
        "uid" : "8a1d78ad8c8dd811",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716740525057,
          "stop" : 1716740525521,
          "duration" : 464
        }
      }, {
        "uid" : "e991009adf09aba8",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716711703453,
          "stop" : 1716711704078,
          "duration" : 625
        }
      }, {
        "uid" : "6e73162f3454ccd7",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716686598953,
          "stop" : 1716686599582,
          "duration" : 629
        }
      }, {
        "uid" : "59f2e9c03d0965e2",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716654047321,
          "stop" : 1716654047975,
          "duration" : 654
        }
      }, {
        "uid" : "5e218f3bcc88bc74",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716625339952,
          "stop" : 1716625340566,
          "duration" : 614
        }
      }, {
        "uid" : "8b176a18fb7f9592",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716599785813,
          "stop" : 1716599786294,
          "duration" : 481
        }
      }, {
        "uid" : "69cd0163c57d51d3",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716567688970,
          "stop" : 1716567689475,
          "duration" : 505
        }
      }, {
        "uid" : "84ba3e72601ba52a",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716538976400,
          "stop" : 1716538977075,
          "duration" : 675
        }
      }, {
        "uid" : "19b0e4859cf9c4a2",
        "status" : "broken",
        "statusDetails" : "requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)",
        "time" : {
          "start" : 1716513470290,
          "stop" : 1716513470445,
          "duration" : 155
        }
      }, {
        "uid" : "95c845e2a405e348",
        "status" : "passed",
        "time" : {
          "start" : 1716481454039,
          "stop" : 1716481462311,
          "duration" : 8272
        }
      }, {
        "uid" : "6e56d51af6d21664",
        "status" : "passed",
        "time" : {
          "start" : 1716452539266,
          "stop" : 1716452546125,
          "duration" : 6859
        }
      }, {
        "uid" : "6b7995fbf548fb68",
        "status" : "passed",
        "time" : {
          "start" : 1716427023957,
          "stop" : 1716427031280,
          "duration" : 7323
        }
      }, {
        "uid" : "7921605896dcdcd5",
        "status" : "passed",
        "time" : {
          "start" : 1716395084827,
          "stop" : 1716395092684,
          "duration" : 7857
        }
      }, {
        "uid" : "f77bee699aa0dbbe",
        "status" : "passed",
        "time" : {
          "start" : 1716366223829,
          "stop" : 1716366230466,
          "duration" : 6637
        }
      }, {
        "uid" : "3d604a4bc0e9db80",
        "status" : "passed",
        "time" : {
          "start" : 1716340671492,
          "stop" : 1716340678336,
          "duration" : 6844
        }
      }, {
        "uid" : "509ce8745cf29af5",
        "status" : "passed",
        "time" : {
          "start" : 1716308533395,
          "stop" : 1716308541046,
          "duration" : 7651
        }
      }, {
        "uid" : "d9813717dfada649",
        "status" : "passed",
        "time" : {
          "start" : 1716279758364,
          "stop" : 1716279765874,
          "duration" : 7510
        }
      } ]
    },
    "tags" : [ "dependency(name='block_players')" ]
  },
  "source" : "20306c4db0c7bf7d.json",
  "parameterValues" : [ ]
}