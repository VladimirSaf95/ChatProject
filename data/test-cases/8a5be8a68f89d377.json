{
  "uid" : "8a5be8a68f89d377",
  "name" : "test_get_chanel",
  "fullName" : "test.test_get_chanel#test_get_chanel",
  "historyId" : "84e91ba442c690feffdfef2b3a65d80f",
  "time" : {
    "start" : 1713774283817,
    "stop" : 1713774284333,
    "duration" : 516
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fae154b7550>\n\n    @allure.feature(\"Channel Operations\")\n    @allure.story(\"Checking Channel Retrieval\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_chanel(api_client):\n        with allure.step(\"Sending GET request for channels\"):\n            # Отправка GET-запроса\n            response = api_client.get(f\"{api_client.roomA}:{api_client.room_second_part}/state/m.room.power_levels?roomId={api_client.roomA}%3A{api_client.room_second_part}\")\n    \n            with allure.step(\"Asserting response status code\"):\n                # Проверка кода состояния\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_get_chanel.py:22: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1713774219266,
      "stop" : 1713774219266,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1713774208317,
      "stop" : 1713774219266,
      "duration" : 10949
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1713774208317,
      "stop" : 1713774208317,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fae154b7550>\n\n    @allure.feature(\"Channel Operations\")\n    @allure.story(\"Checking Channel Retrieval\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_chanel(api_client):\n        with allure.step(\"Sending GET request for channels\"):\n            # Отправка GET-запроса\n            response = api_client.get(f\"{api_client.roomA}:{api_client.room_second_part}/state/m.room.power_levels?roomId={api_client.roomA}%3A{api_client.room_second_part}\")\n    \n            with allure.step(\"Asserting response status code\"):\n                # Проверка кода состояния\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_get_chanel.py:22: AssertionError",
    "steps" : [ {
      "name" : "Sending GET request for channels",
      "time" : {
        "start" : 1713774283817,
        "stop" : 1713774284333,
        "duration" : 516
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_get_chanel.py\", line 22, in test_get_chanel\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Asserting response status code",
        "time" : {
          "start" : 1713774284333,
          "stop" : 1713774284333,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_get_chanel.py\", line 22, in test_get_chanel\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1713774374062,
      "stop" : 1713774374062,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "story",
    "value" : "Checking Channel Retrieval"
  }, {
    "name" : "feature",
    "value" : "Channel Operations"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_get_chanel"
  }, {
    "name" : "host",
    "value" : "41e1a3701343"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_get_chanel"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 72,
        "unknown" : 0,
        "total" : 77
      },
      "items" : [ {
        "uid" : "40f0558902b896f5",
        "status" : "passed",
        "time" : {
          "start" : 1713748605775,
          "stop" : 1713748605958,
          "duration" : 183
        }
      }, {
        "uid" : "9b3ff4955929b51d",
        "status" : "passed",
        "time" : {
          "start" : 1713716537472,
          "stop" : 1713716537680,
          "duration" : 208
        }
      }, {
        "uid" : "c428fee5f70460fb",
        "status" : "passed",
        "time" : {
          "start" : 1713687670840,
          "stop" : 1713687671026,
          "duration" : 186
        }
      }, {
        "uid" : "987f7a33d2144a0f",
        "status" : "passed",
        "time" : {
          "start" : 1713662396245,
          "stop" : 1713662396484,
          "duration" : 239
        }
      }, {
        "uid" : "c0fc665caf90925e",
        "status" : "passed",
        "time" : {
          "start" : 1713630125074,
          "stop" : 1713630125628,
          "duration" : 554
        }
      }, {
        "uid" : "4311bd50530b2d8b",
        "status" : "passed",
        "time" : {
          "start" : 1713575659859,
          "stop" : 1713575660072,
          "duration" : 213
        }
      }, {
        "uid" : "c0a9a6d619a153ab",
        "status" : "passed",
        "time" : {
          "start" : 1713543855894,
          "stop" : 1713543856347,
          "duration" : 453
        }
      }, {
        "uid" : "8cd9a91ec00f6745",
        "status" : "passed",
        "time" : {
          "start" : 1713514953811,
          "stop" : 1713514954001,
          "duration" : 190
        }
      }, {
        "uid" : "ba5e96fa0461d0cf",
        "status" : "passed",
        "time" : {
          "start" : 1713489875009,
          "stop" : 1713489875587,
          "duration" : 578
        }
      }, {
        "uid" : "e46a9df1a470bc0e",
        "status" : "passed",
        "time" : {
          "start" : 1713457395955,
          "stop" : 1713457396235,
          "duration" : 280
        }
      }, {
        "uid" : "e9a0ebdbfab22bd9",
        "status" : "passed",
        "time" : {
          "start" : 1713428581889,
          "stop" : 1713428582065,
          "duration" : 176
        }
      }, {
        "uid" : "d6e50f1e6d99c255",
        "status" : "passed",
        "time" : {
          "start" : 1713402833775,
          "stop" : 1713402833964,
          "duration" : 189
        }
      }, {
        "uid" : "6a1629bfe4eac22b",
        "status" : "passed",
        "time" : {
          "start" : 1713371063442,
          "stop" : 1713371063702,
          "duration" : 260
        }
      }, {
        "uid" : "521771a220aead7f",
        "status" : "passed",
        "time" : {
          "start" : 1713342711838,
          "stop" : 1713342712767,
          "duration" : 929
        }
      }, {
        "uid" : "1c2e24782abced29",
        "status" : "passed",
        "time" : {
          "start" : 1713316476152,
          "stop" : 1713316476365,
          "duration" : 213
        }
      }, {
        "uid" : "58dc9eb1a5aaa9d8",
        "status" : "passed",
        "time" : {
          "start" : 1713285164625,
          "stop" : 1713285165104,
          "duration" : 479
        }
      }, {
        "uid" : "1839cdd140c164fa",
        "status" : "passed",
        "time" : {
          "start" : 1713255751618,
          "stop" : 1713255751857,
          "duration" : 239
        }
      }, {
        "uid" : "c8c6b2196269da74",
        "status" : "passed",
        "time" : {
          "start" : 1713230035099,
          "stop" : 1713230035347,
          "duration" : 248
        }
      }, {
        "uid" : "faa6456186c55aa",
        "status" : "passed",
        "time" : {
          "start" : 1713198147857,
          "stop" : 1713198148073,
          "duration" : 216
        }
      }, {
        "uid" : "bfda09e1c6d929fa",
        "status" : "passed",
        "time" : {
          "start" : 1713169128873,
          "stop" : 1713169129051,
          "duration" : 178
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "8a5be8a68f89d377.json",
  "parameterValues" : [ ]
}