{
  "uid" : "ece31dc1e1de0b8b",
  "name" : "test_tag_user",
  "fullName" : "test.test_messages_functionality#test_tag_user",
  "historyId" : "585b036b510637bc4e1227ec18f2d0bf",
  "time" : {
    "start" : 1719937631115,
    "stop" : 1719937631753,
    "duration" : 638
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f6b997756a0>\n\n    @allure.feature(\"Tagging Players\")\n    @allure.story(\"Tagging player in chat\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_tag_user(api_client):\n        with allure.step(\"Tagging player in chat\"):\n            data = {\"body\": \"@testchat100 text tag player\", \"mention\": [api_client.senderid_adm], \"msgtype\": \"m.text\",\n                    \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:118: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1719937511554,
      "stop" : 1719937511554,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1719937508362,
      "stop" : 1719937508362,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1719937508362,
      "stop" : 1719937511554,
      "duration" : 3192
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f6b997756a0>\n\n    @allure.feature(\"Tagging Players\")\n    @allure.story(\"Tagging player in chat\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_tag_user(api_client):\n        with allure.step(\"Tagging player in chat\"):\n            data = {\"body\": \"@testchat100 text tag player\", \"mention\": [api_client.senderid_adm], \"msgtype\": \"m.text\",\n                    \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:118: AssertionError",
    "steps" : [ {
      "name" : "Tagging player in chat",
      "time" : {
        "start" : 1719937631115,
        "stop" : 1719937631753,
        "duration" : 638
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 118, in test_tag_user\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Check response code",
        "time" : {
          "start" : 1719937631753,
          "stop" : 1719937631753,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 118, in test_tag_user\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1719937648647,
      "stop" : 1719937648647,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "feature",
    "value" : "Tagging Players"
  }, {
    "name" : "story",
    "value" : "Tagging player in chat"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "99f5e786f03f"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 14,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 251,
        "unknown" : 0,
        "total" : 269
      },
      "items" : [ {
        "uid" : "4a72417ad537f6b",
        "status" : "passed",
        "time" : {
          "start" : 1719908683298,
          "stop" : 1719908683738,
          "duration" : 440
        }
      }, {
        "uid" : "f10cf91443e229eb",
        "status" : "passed",
        "time" : {
          "start" : 1719883350678,
          "stop" : 1719883351139,
          "duration" : 461
        }
      }, {
        "uid" : "f767e8ddc5f67cb1",
        "status" : "passed",
        "time" : {
          "start" : 1719851052419,
          "stop" : 1719851052978,
          "duration" : 559
        }
      }, {
        "uid" : "6116b32eaf8c0867",
        "status" : "passed",
        "time" : {
          "start" : 1719822380588,
          "stop" : 1719822383318,
          "duration" : 2730
        }
      }, {
        "uid" : "c4522823f318dfe3",
        "status" : "passed",
        "time" : {
          "start" : 1719218115644,
          "stop" : 1719218116509,
          "duration" : 865
        }
      }, {
        "uid" : "b06c759afbbbe4d1",
        "status" : "passed",
        "time" : {
          "start" : 1719192159181,
          "stop" : 1719192159882,
          "duration" : 701
        }
      }, {
        "uid" : "f10d705d1c0f3230",
        "status" : "passed",
        "time" : {
          "start" : 1719159766568,
          "stop" : 1719159767643,
          "duration" : 1075
        }
      }, {
        "uid" : "52555bb30d3efc2d",
        "status" : "passed",
        "time" : {
          "start" : 1719130912006,
          "stop" : 1719130912437,
          "duration" : 431
        }
      }, {
        "uid" : "47b07d98694c9530",
        "status" : "passed",
        "time" : {
          "start" : 1719105962004,
          "stop" : 1719105962466,
          "duration" : 462
        }
      }, {
        "uid" : "381f0d965d53f1e",
        "status" : "passed",
        "time" : {
          "start" : 1719073478681,
          "stop" : 1719073479077,
          "duration" : 396
        }
      }, {
        "uid" : "45c98d2e028d5022",
        "status" : "passed",
        "time" : {
          "start" : 1719044597254,
          "stop" : 1719044597803,
          "duration" : 549
        }
      }, {
        "uid" : "4be66bf99a026a58",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1719019269008,
          "stop" : 1719019269330,
          "duration" : 322
        }
      }, {
        "uid" : "a93dd69c84a7ad32",
        "status" : "passed",
        "time" : {
          "start" : 1718987014644,
          "stop" : 1718987015193,
          "duration" : 549
        }
      }, {
        "uid" : "ba4edd78f831c63a",
        "status" : "passed",
        "time" : {
          "start" : 1718958825528,
          "stop" : 1718958826298,
          "duration" : 770
        }
      }, {
        "uid" : "8fa34917421cb02e",
        "status" : "passed",
        "time" : {
          "start" : 1718932838766,
          "stop" : 1718932839712,
          "duration" : 946
        }
      }, {
        "uid" : "623dacbe88b4595e",
        "status" : "passed",
        "time" : {
          "start" : 1718900780439,
          "stop" : 1718900780903,
          "duration" : 464
        }
      }, {
        "uid" : "b1ba603f4a66b1b9",
        "status" : "passed",
        "time" : {
          "start" : 1718871898844,
          "stop" : 1718871899551,
          "duration" : 707
        }
      }, {
        "uid" : "f7e71534e8015f69",
        "status" : "passed",
        "time" : {
          "start" : 1718846406103,
          "stop" : 1718846406534,
          "duration" : 431
        }
      }, {
        "uid" : "176aca70d9c9ddd3",
        "status" : "passed",
        "time" : {
          "start" : 1718814832664,
          "stop" : 1718814833655,
          "duration" : 991
        }
      }, {
        "uid" : "f317603c0329197c",
        "status" : "passed",
        "time" : {
          "start" : 1718785493836,
          "stop" : 1718785495085,
          "duration" : 1249
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "ece31dc1e1de0b8b.json",
  "parameterValues" : [ ]
}