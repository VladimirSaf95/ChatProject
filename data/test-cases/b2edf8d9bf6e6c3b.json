{
  "uid" : "b2edf8d9bf6e6c3b",
  "name" : "test_get_chanel_matrix",
  "fullName" : "test.test_get_chanel#test_get_chanel_matrix",
  "historyId" : "81558e6b70736da3a13cca7374afbd2f",
  "time" : {
    "start" : 1716798242220,
    "stop" : 1716798242610,
    "duration" : 390
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fd5c21039a0>\n\n    @allure.feature(\"Channel Operations\")\n    @allure.story(\"Checking Matrix Channel Retrieval\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_chanel_matrix(api_client):\n        with allure.step(\"Sending GET request for channels\"):\n            # Отправка GET-запроса\n            response = requests.get(f\"{api_client.base_url_api}/api/v1/correspondence/rooms/{api_client.xnodeid}\")\n    \n            with allure.step(\"Asserting response status code\"):\n                # Проверка кода состояния\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_get_chanel.py:37: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "init_authorization",
    "time" : {
      "start" : 1716798193817,
      "stop" : 1716798195785,
      "duration" : 1968
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1716798193817,
      "stop" : 1716798193817,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_client",
    "time" : {
      "start" : 1716798195785,
      "stop" : 1716798195785,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fd5c21039a0>\n\n    @allure.feature(\"Channel Operations\")\n    @allure.story(\"Checking Matrix Channel Retrieval\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_get_chanel_matrix(api_client):\n        with allure.step(\"Sending GET request for channels\"):\n            # Отправка GET-запроса\n            response = requests.get(f\"{api_client.base_url_api}/api/v1/correspondence/rooms/{api_client.xnodeid}\")\n    \n            with allure.step(\"Asserting response status code\"):\n                # Проверка кода состояния\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_get_chanel.py:37: AssertionError",
    "steps" : [ {
      "name" : "Sending GET request for channels",
      "time" : {
        "start" : 1716798242220,
        "stop" : 1716798242610,
        "duration" : 390
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_get_chanel.py\", line 37, in test_get_chanel_matrix\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Asserting response status code",
        "time" : {
          "start" : 1716798242609,
          "stop" : 1716798242610,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_get_chanel.py\", line 37, in test_get_chanel_matrix\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1716798251521,
      "stop" : 1716798251521,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Channel Operations"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "Checking Matrix Channel Retrieval"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_get_chanel"
  }, {
    "name" : "host",
    "value" : "9b864710abbd"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_get_chanel"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 11,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 166,
        "unknown" : 0,
        "total" : 181
      },
      "items" : [ {
        "uid" : "22fa0d8b0e27886c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716772780604,
          "stop" : 1716772780753,
          "duration" : 149
        }
      }, {
        "uid" : "8e61237b4ef3bb5c",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716741146847,
          "stop" : 1716741147307,
          "duration" : 460
        }
      }, {
        "uid" : "e899b41725e36c46",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716711749358,
          "stop" : 1716711749546,
          "duration" : 188
        }
      }, {
        "uid" : "2a13d774b44d7b04",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716686644508,
          "stop" : 1716686645126,
          "duration" : 618
        }
      }, {
        "uid" : "5f030142be783267",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716654093933,
          "stop" : 1716654094127,
          "duration" : 194
        }
      }, {
        "uid" : "609ab1adf6512dbc",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716625384814,
          "stop" : 1716625385014,
          "duration" : 200
        }
      }, {
        "uid" : "f01184b6aa320989",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716599829561,
          "stop" : 1716599830014,
          "duration" : 453
        }
      }, {
        "uid" : "b639f4dbd58f44f8",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716567734300,
          "stop" : 1716567734783,
          "duration" : 483
        }
      }, {
        "uid" : "49dd0082dae1919e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716539022057,
          "stop" : 1716539022683,
          "duration" : 626
        }
      }, {
        "uid" : "e75abd27b0c7f5c6",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716513516132,
          "stop" : 1716513516598,
          "duration" : 466
        }
      }, {
        "uid" : "4e9703c8124f1e0",
        "status" : "passed",
        "time" : {
          "start" : 1716481514257,
          "stop" : 1716481514463,
          "duration" : 206
        }
      }, {
        "uid" : "2414de2363207f51",
        "status" : "passed",
        "time" : {
          "start" : 1716452594232,
          "stop" : 1716452594383,
          "duration" : 151
        }
      }, {
        "uid" : "64c125e74140c1ce",
        "status" : "passed",
        "time" : {
          "start" : 1716427079127,
          "stop" : 1716427079279,
          "duration" : 152
        }
      }, {
        "uid" : "3d59b96932701853",
        "status" : "passed",
        "time" : {
          "start" : 1716395144643,
          "stop" : 1716395144857,
          "duration" : 214
        }
      }, {
        "uid" : "29962b4fd9cd5b1b",
        "status" : "passed",
        "time" : {
          "start" : 1716366281683,
          "stop" : 1716366281877,
          "duration" : 194
        }
      }, {
        "uid" : "25ec7ddb73dd72b6",
        "status" : "passed",
        "time" : {
          "start" : 1716340724838,
          "stop" : 1716340724980,
          "duration" : 142
        }
      }, {
        "uid" : "57f6750621c1997d",
        "status" : "passed",
        "time" : {
          "start" : 1716308590611,
          "stop" : 1716308590764,
          "duration" : 153
        }
      }, {
        "uid" : "72e9d27f9035a7f4",
        "status" : "passed",
        "time" : {
          "start" : 1716279818155,
          "stop" : 1716279818316,
          "duration" : 161
        }
      }, {
        "uid" : "d8e802c360c66652",
        "status" : "passed",
        "time" : {
          "start" : 1716254291981,
          "stop" : 1716254292179,
          "duration" : 198
        }
      }, {
        "uid" : "7e6b4ebca7583f50",
        "status" : "passed",
        "time" : {
          "start" : 1716222259854,
          "stop" : 1716222260034,
          "duration" : 180
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "b2edf8d9bf6e6c3b.json",
  "parameterValues" : [ ]
}