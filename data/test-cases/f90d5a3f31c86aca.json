{
  "uid" : "f90d5a3f31c86aca",
  "name" : "test_guest_write_text",
  "fullName" : "test.test_guest_write_text#test_guest_write_text",
  "historyId" : "ce0cd46787e71938b1e1382945934dfe",
  "time" : {
    "start" : 1714120330995,
    "stop" : 1714120330995,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom timeout: Timed out receiving message from renderer: 600.000\n  (Session info: headless chrome=102.0.5005.182)",
  "statusTrace" : "request = <SubRequest 'app' for <Function test_click_chat_room>>\nconfig = {'api': {'Login_admin': 'testchat100', 'Login_player': 'testchat101', 'Password_admin': 'Qwert123}', 'Password_player': 'Qwert123}', ...}, 'web': {'baseUrl': 'https://qamain.kit.casino/'}}\ninit_authorization = (<fixture.authorization.Authorization object at 0x7fc2c697d280>, 'syt_NjM0MGQ4MWUtZjIyMC00OTMxLTg4ZWItZjNhZTU2OTJjYTdi...yNGMtMjg0ODRhN2QwY2Yz_kYrSOredgLhkeeKxtFPM_0rKKwC', '4ea5b488-733b-4566-924c-28484a7d0cf3', '!qQtVtblQXsAHkkuYCN', ...)\n\n    @pytest.fixture(scope=\"session\", autouse=False)\n    def app(request, config, init_authorization):\n        # Фикстура для инициализации приложения (открытия браузера).\n        web_config = config[\"web\"]\n        browser = request.config.getoption(\"--browser\")\n        auth, player_access_token, player_user_id, admin_access_token, admin_user_id, roomA, room_second_part, roomB, admin_api_token = init_authorization\n    \n>       app_fixture = Application(browser=browser, base_url=web_config['baseUrl'], roomA=roomA, room_second_part=room_second_part, roomB=roomB)\n\nconftest.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfixture/application.py:17: in __init__\n    self.wd = webdriver.Chrome(options=options)\n../local/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n../local/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py:61: in __init__\n    super().__init__(command_executor=executor, options=options)\n../local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:208: in __init__\n    self.start_session(capabilities)\n../local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:292: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n../local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc2c697dd60>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created\\\\nfrom timeout: Timed out receiving message from renderer: 600.000\\\\n  (Session info: headless chrome=102.0.5005.182)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nE       from timeout: Timed out receiving message from renderer: 600.000\nE         (Session info: headless chrome=102.0.5005.182)\n\n../local/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1714119695649,
      "stop" : 1714119695649,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1714119729552,
      "stop" : 1714120329900,
      "duration" : 600348
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom timeout: Timed out receiving message from renderer: 600.000\n  (Session info: headless chrome=102.0.5005.182)\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.9/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/usr/local/lib/python3.9/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.9/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.9/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/usr/workspace/conftest.py\", line 92, in app\n    app_fixture = Application(browser=browser, base_url=web_config['baseUrl'], roomA=roomA, room_second_part=room_second_part, roomB=roomB)\n  File \"/usr/workspace/fixture/application.py\", line 17, in __init__\n    self.wd = webdriver.Chrome(options=options)\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/chromium/webdriver.py\", line 61, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 208, in __init__\n    self.start_session(capabilities)\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 292, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  }, {
    "name" : "config",
    "time" : {
      "start" : 1714119692602,
      "stop" : 1714119692602,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1714119692602,
      "stop" : 1714119695649,
      "duration" : 3047
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1714120409128,
      "stop" : 1714120409128,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Guest Chat Functionality"
  }, {
    "name" : "story",
    "value" : "Writing Text as Guest"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_guest_write_text"
  }, {
    "name" : "host",
    "value" : "5a49e027d19e"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_guest_write_text"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 12,
        "skipped" : 0,
        "passed" : 72,
        "unknown" : 0,
        "total" : 89
      },
      "items" : [ {
        "uid" : "70b35b51bcf39676",
        "status" : "passed",
        "time" : {
          "start" : 1714094142301,
          "stop" : 1714094143583,
          "duration" : 1282
        }
      }, {
        "uid" : "3cb6901550fd33f0",
        "status" : "passed",
        "time" : {
          "start" : 1714062159673,
          "stop" : 1714062166820,
          "duration" : 7147
        }
      }, {
        "uid" : "474dbf71f219a683",
        "status" : "passed",
        "time" : {
          "start" : 1714033442435,
          "stop" : 1714033444204,
          "duration" : 1769
        }
      }, {
        "uid" : "1e27240051386025",
        "status" : "passed",
        "time" : {
          "start" : 1714007832300,
          "stop" : 1714007833631,
          "duration" : 1331
        }
      }, {
        "uid" : "72e953bb53a6e997",
        "status" : "passed",
        "time" : {
          "start" : 1713975754824,
          "stop" : 1713975756106,
          "duration" : 1282
        }
      }, {
        "uid" : "14079df9ba6c9f37",
        "status" : "passed",
        "time" : {
          "start" : 1713947060460,
          "stop" : 1713947062314,
          "duration" : 1854
        }
      }, {
        "uid" : "ab75808d985b42f4",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom timeout: Timed out receiving message from renderer: 600.000\n  (Session info: headless chrome=102.0.5005.182)",
        "time" : {
          "start" : 1713922017186,
          "stop" : 1713922017186,
          "duration" : 0
        }
      }, {
        "uid" : "cb7340d79f66b3ae",
        "status" : "passed",
        "time" : {
          "start" : 1713889388861,
          "stop" : 1713889390089,
          "duration" : 1228
        }
      }, {
        "uid" : "8c43fe2e8e5e9da8",
        "status" : "passed",
        "time" : {
          "start" : 1713860554194,
          "stop" : 1713860555224,
          "duration" : 1030
        }
      }, {
        "uid" : "25260a6d7cf0a469",
        "status" : "passed",
        "time" : {
          "start" : 1713834936713,
          "stop" : 1713834938189,
          "duration" : 1476
        }
      }, {
        "uid" : "8d4b7fb52401777f",
        "status" : "passed",
        "time" : {
          "start" : 1713802976098,
          "stop" : 1713802980432,
          "duration" : 4334
        }
      }, {
        "uid" : "3eace97387e545bb",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert False == True\n +  where False = <bound method Application.check_current_url of <fixture.application.Application object at 0x7fae14375100>>()\n +    where <bound method Application.check_current_url of <fixture.application.Application object at 0x7fae14375100>> = <fixture.application.Application object at 0x7fae14375100>.check_current_url",
        "time" : {
          "start" : 1713774284813,
          "stop" : 1713774291021,
          "duration" : 6208
        }
      }, {
        "uid" : "565a7039a6a31c0",
        "status" : "passed",
        "time" : {
          "start" : 1713748606117,
          "stop" : 1713748607133,
          "duration" : 1016
        }
      }, {
        "uid" : "77856d544c37250e",
        "status" : "passed",
        "time" : {
          "start" : 1713716537830,
          "stop" : 1713716538811,
          "duration" : 981
        }
      }, {
        "uid" : "8bb9e9c60b6e3238",
        "status" : "passed",
        "time" : {
          "start" : 1713687671169,
          "stop" : 1713687672244,
          "duration" : 1075
        }
      }, {
        "uid" : "a3c966ffe6ee4aec",
        "status" : "passed",
        "time" : {
          "start" : 1713662396993,
          "stop" : 1713662398159,
          "duration" : 1166
        }
      }, {
        "uid" : "34fd8164fdb735ed",
        "status" : "passed",
        "time" : {
          "start" : 1713630125842,
          "stop" : 1713630127054,
          "duration" : 1212
        }
      }, {
        "uid" : "2a70ef2d4be64144",
        "status" : "passed",
        "time" : {
          "start" : 1713575660235,
          "stop" : 1713575661241,
          "duration" : 1006
        }
      }, {
        "uid" : "e84df2a9edad6619",
        "status" : "passed",
        "time" : {
          "start" : 1713543856743,
          "stop" : 1713543858456,
          "duration" : 1713
        }
      }, {
        "uid" : "419c411c154b12e",
        "status" : "passed",
        "time" : {
          "start" : 1713514954148,
          "stop" : 1713514955142,
          "duration" : 994
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f90d5a3f31c86aca.json",
  "parameterValues" : [ ]
}