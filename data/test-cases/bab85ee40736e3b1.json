{
  "uid" : "bab85ee40736e3b1",
  "name" : "test_send_emoji",
  "fullName" : "test.test_messages_functionality#test_send_emoji",
  "historyId" : "7bb320f962adcc3b1847931bf3d7efa9",
  "time" : {
    "start" : 1719937629151,
    "stop" : 1719937629787,
    "duration" : 636
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f6b997756a0>\n\n    @allure.feature(\"Sending Messages\")\n    @allure.story(\"Sending Emoji\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_emoji(api_client):\n        with allure.step(\"Sending emoji and checking response\"):\n            data = {\"body\": \"\uD83D\uDE05\", \"msgtype\": \"m.text\", \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:57: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1719937511554,
      "stop" : 1719937511554,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1719937508362,
      "stop" : 1719937508362,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1719937508362,
      "stop" : 1719937511554,
      "duration" : 3192
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f6b997756a0>\n\n    @allure.feature(\"Sending Messages\")\n    @allure.story(\"Sending Emoji\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_emoji(api_client):\n        with allure.step(\"Sending emoji and checking response\"):\n            data = {\"body\": \"\uD83D\uDE05\", \"msgtype\": \"m.text\", \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:57: AssertionError",
    "steps" : [ {
      "name" : "Sending emoji and checking response",
      "time" : {
        "start" : 1719937629151,
        "stop" : 1719937629787,
        "duration" : 636
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 57, in test_send_emoji\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Check response code",
        "time" : {
          "start" : 1719937629787,
          "stop" : 1719937629787,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 57, in test_send_emoji\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1719937648647,
      "stop" : 1719937648647,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Sending Emoji"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "feature",
    "value" : "Sending Messages"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "99f5e786f03f"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 14,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 251,
        "unknown" : 0,
        "total" : 269
      },
      "items" : [ {
        "uid" : "2b49fa12c1f6c678",
        "status" : "passed",
        "time" : {
          "start" : 1719908682520,
          "stop" : 1719908682983,
          "duration" : 463
        }
      }, {
        "uid" : "cc29a66fb5f6567e",
        "status" : "passed",
        "time" : {
          "start" : 1719883349866,
          "stop" : 1719883350350,
          "duration" : 484
        }
      }, {
        "uid" : "d165a43191507864",
        "status" : "passed",
        "time" : {
          "start" : 1719851051426,
          "stop" : 1719851052044,
          "duration" : 618
        }
      }, {
        "uid" : "163794690dd4f5e9",
        "status" : "passed",
        "time" : {
          "start" : 1719822376655,
          "stop" : 1719822378363,
          "duration" : 1708
        }
      }, {
        "uid" : "e0ddda40a59d29f6",
        "status" : "passed",
        "time" : {
          "start" : 1719218113908,
          "stop" : 1719218114897,
          "duration" : 989
        }
      }, {
        "uid" : "bc99551a270bcf3b",
        "status" : "passed",
        "time" : {
          "start" : 1719192158408,
          "stop" : 1719192158849,
          "duration" : 441
        }
      }, {
        "uid" : "75554b18554aa62",
        "status" : "passed",
        "time" : {
          "start" : 1719159765593,
          "stop" : 1719159766122,
          "duration" : 529
        }
      }, {
        "uid" : "5ef6dd9cb94bfb94",
        "status" : "passed",
        "time" : {
          "start" : 1719130911291,
          "stop" : 1719130911742,
          "duration" : 451
        }
      }, {
        "uid" : "2738b16ee5164870",
        "status" : "passed",
        "time" : {
          "start" : 1719105961199,
          "stop" : 1719105961673,
          "duration" : 474
        }
      }, {
        "uid" : "81a14ce7f6071cf3",
        "status" : "passed",
        "time" : {
          "start" : 1719073477883,
          "stop" : 1719073478357,
          "duration" : 474
        }
      }, {
        "uid" : "ac9950ff9425e20f",
        "status" : "passed",
        "time" : {
          "start" : 1719044596286,
          "stop" : 1719044596838,
          "duration" : 552
        }
      }, {
        "uid" : "f1e0739d9a774b3f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1719019266022,
          "stop" : 1719019266797,
          "duration" : 775
        }
      }, {
        "uid" : "5c4a643bf82c6d93",
        "status" : "passed",
        "time" : {
          "start" : 1718987013299,
          "stop" : 1718987013855,
          "duration" : 556
        }
      }, {
        "uid" : "637ca9cf8e795c47",
        "status" : "passed",
        "time" : {
          "start" : 1718958824263,
          "stop" : 1718958824960,
          "duration" : 697
        }
      }, {
        "uid" : "110a3496dcb5e8d5",
        "status" : "passed",
        "time" : {
          "start" : 1718932837494,
          "stop" : 1718932838434,
          "duration" : 940
        }
      }, {
        "uid" : "56aea3357ad03746",
        "status" : "passed",
        "time" : {
          "start" : 1718900779590,
          "stop" : 1718900780102,
          "duration" : 512
        }
      }, {
        "uid" : "9ae76a9113c9509a",
        "status" : "passed",
        "time" : {
          "start" : 1718871897495,
          "stop" : 1718871898389,
          "duration" : 894
        }
      }, {
        "uid" : "b07c6106d6b8a769",
        "status" : "passed",
        "time" : {
          "start" : 1718846405208,
          "stop" : 1718846405737,
          "duration" : 529
        }
      }, {
        "uid" : "7eaa618e8a6c55b3",
        "status" : "passed",
        "time" : {
          "start" : 1718814830746,
          "stop" : 1718814831777,
          "duration" : 1031
        }
      }, {
        "uid" : "cf472d56ec756deb",
        "status" : "passed",
        "time" : {
          "start" : 1718785492724,
          "stop" : 1718785493355,
          "duration" : 631
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "bab85ee40736e3b1.json",
  "parameterValues" : [ ]
}