{
  "uid" : "43218326c03ec406",
  "name" : "test_get_chanel",
  "fullName" : "test.test_get_chanel#test_get_chanel",
  "historyId" : "84e91ba442c690feffdfef2b3a65d80f",
  "time" : {
    "start" : 1719019262806,
    "stop" : 1719019263046,
    "duration" : 240
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fa338c23640>\n\n    @allure.feature(\"Channel Operations\")\n    @allure.story(\"Checking Channel Retrieval\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_chanel(api_client):\n        with allure.step(\"Sending GET request for channels\"):\n            # Отправка GET-запроса\n            response = api_client.get(f\"{api_client.roomA}:{api_client.room_second_part}/state/m.room.power_levels?roomId={api_client.roomA}%3A{api_client.room_second_part}\")\n    \n            with allure.step(\"Asserting response status code\"):\n                # Проверка кода состояния\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_get_chanel.py:22: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1719019209948,
      "stop" : 1719019209948,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1719019145820,
      "stop" : 1719019145820,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1719019145820,
      "stop" : 1719019209947,
      "duration" : 64127
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fa338c23640>\n\n    @allure.feature(\"Channel Operations\")\n    @allure.story(\"Checking Channel Retrieval\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_get_chanel(api_client):\n        with allure.step(\"Sending GET request for channels\"):\n            # Отправка GET-запроса\n            response = api_client.get(f\"{api_client.roomA}:{api_client.room_second_part}/state/m.room.power_levels?roomId={api_client.roomA}%3A{api_client.room_second_part}\")\n    \n            with allure.step(\"Asserting response status code\"):\n                # Проверка кода состояния\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_get_chanel.py:22: AssertionError",
    "steps" : [ {
      "name" : "Sending GET request for channels",
      "time" : {
        "start" : 1719019262806,
        "stop" : 1719019263045,
        "duration" : 239
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_get_chanel.py\", line 22, in test_get_chanel\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Asserting response status code",
        "time" : {
          "start" : 1719019263045,
          "stop" : 1719019263045,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_get_chanel.py\", line 22, in test_get_chanel\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1719019349653,
      "stop" : 1719019349653,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Checking Channel Retrieval"
  }, {
    "name" : "feature",
    "value" : "Channel Operations"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_get_chanel"
  }, {
    "name" : "host",
    "value" : "21851eb13c55"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_get_chanel"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 240,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "10b581b4ce17eac6",
        "status" : "passed",
        "time" : {
          "start" : 1718987010285,
          "stop" : 1718987010515,
          "duration" : 230
        }
      }, {
        "uid" : "3514d519b910c2ef",
        "status" : "passed",
        "time" : {
          "start" : 1718958821589,
          "stop" : 1718958822057,
          "duration" : 468
        }
      }, {
        "uid" : "bde9a7b0bd4f4872",
        "status" : "passed",
        "time" : {
          "start" : 1718932833303,
          "stop" : 1718932833548,
          "duration" : 245
        }
      }, {
        "uid" : "e2270c34eb8df61a",
        "status" : "passed",
        "time" : {
          "start" : 1718900776818,
          "stop" : 1718900777037,
          "duration" : 219
        }
      }, {
        "uid" : "f3c7d4da4c9d62a6",
        "status" : "passed",
        "time" : {
          "start" : 1718871894365,
          "stop" : 1718871894626,
          "duration" : 261
        }
      }, {
        "uid" : "37a0f6f8841618ac",
        "status" : "passed",
        "time" : {
          "start" : 1718846402584,
          "stop" : 1718846402799,
          "duration" : 215
        }
      }, {
        "uid" : "770402bb773b1b50",
        "status" : "passed",
        "time" : {
          "start" : 1718814827124,
          "stop" : 1718814827877,
          "duration" : 753
        }
      }, {
        "uid" : "ddd6d5b917faa59f",
        "status" : "passed",
        "time" : {
          "start" : 1718785489679,
          "stop" : 1718785489975,
          "duration" : 296
        }
      }, {
        "uid" : "48e5ca1ee755d7f1",
        "status" : "passed",
        "time" : {
          "start" : 1718760120388,
          "stop" : 1718760120635,
          "duration" : 247
        }
      }, {
        "uid" : "6b0836cc3d765d03",
        "status" : "passed",
        "time" : {
          "start" : 1718727891940,
          "stop" : 1718727892126,
          "duration" : 186
        }
      }, {
        "uid" : "7cca89cbdf2c1439",
        "status" : "passed",
        "time" : {
          "start" : 1718699687520,
          "stop" : 1718699688212,
          "duration" : 692
        }
      }, {
        "uid" : "69efc6d31e867559",
        "status" : "passed",
        "time" : {
          "start" : 1718673705571,
          "stop" : 1718673705778,
          "duration" : 207
        }
      }, {
        "uid" : "84fa9002f0c540f7",
        "status" : "passed",
        "time" : {
          "start" : 1718642070583,
          "stop" : 1718642071101,
          "duration" : 518
        }
      }, {
        "uid" : "ea470e7b5ad627bd",
        "status" : "passed",
        "time" : {
          "start" : 1718612709732,
          "stop" : 1718612709928,
          "duration" : 196
        }
      }, {
        "uid" : "767b8203e631e078",
        "status" : "passed",
        "time" : {
          "start" : 1718587436124,
          "stop" : 1718587436380,
          "duration" : 256
        }
      }, {
        "uid" : "86e6bb4ecde87877",
        "status" : "passed",
        "time" : {
          "start" : 1718555527053,
          "stop" : 1718555527818,
          "duration" : 765
        }
      }, {
        "uid" : "c39eed18c66b51da",
        "status" : "passed",
        "time" : {
          "start" : 1718526150830,
          "stop" : 1718526151055,
          "duration" : 225
        }
      }, {
        "uid" : "72104af20ed003b1",
        "status" : "passed",
        "time" : {
          "start" : 1718501223683,
          "stop" : 1718501223870,
          "duration" : 187
        }
      }, {
        "uid" : "1af5253bc351e583",
        "status" : "passed",
        "time" : {
          "start" : 1718468633830,
          "stop" : 1718468634006,
          "duration" : 176
        }
      }, {
        "uid" : "a997f06d71dfc962",
        "status" : "passed",
        "time" : {
          "start" : 1718439771826,
          "stop" : 1718439771996,
          "duration" : 170
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "43218326c03ec406.json",
  "parameterValues" : [ ]
}