{
  "uid" : "1df3b912316e5908",
  "name" : "test_send_complaint",
  "fullName" : "test.test_messages_functionality#test_send_complaint",
  "historyId" : "31f8786fe3f6ff4b035b30b6ade7469c",
  "time" : {
    "start" : 1713774295901,
    "stop" : 1713774297598,
    "duration" : 1697
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fae154b7550>\n\n    @allure.feature(\"Sending Complaints\")\n    @allure.story(\"Filing Complaint on Message\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_send_complaint(api_client):\n        event_id = os.environ.get(\"EVENT_ID_A\")\n        if event_id is None:\n            responseA = api_client.sendmessages(response_b=False)\n            event_id = os.environ.get(\"EVENT_ID_A\")\n    \n        data = {\"eventUid\": event_id, \"channelUid\": f\"{api_client.roomA}%3A{api_client.room_second_part}\",\n                \"reason\": \"trolling\"}\n    \n        with allure.step(\"Filing complaint on message\"):\n            response = api_client.post_token_s(f\"api/v1/complaint/send/{api_client.xnodeid}\", json=data)\n    \n        with allure.step(\"Asserting response status code\"):\n>           assert response.status_code == 200, \"Response status code is not 200\"\nE           AssertionError: Response status code is not 200\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:235: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1713774219266,
      "stop" : 1713774219266,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1713774208317,
      "stop" : 1713774219266,
      "duration" : 10949
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1713774208317,
      "stop" : 1713774208317,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fae154b7550>\n\n    @allure.feature(\"Sending Complaints\")\n    @allure.story(\"Filing Complaint on Message\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_send_complaint(api_client):\n        event_id = os.environ.get(\"EVENT_ID_A\")\n        if event_id is None:\n            responseA = api_client.sendmessages(response_b=False)\n            event_id = os.environ.get(\"EVENT_ID_A\")\n    \n        data = {\"eventUid\": event_id, \"channelUid\": f\"{api_client.roomA}%3A{api_client.room_second_part}\",\n                \"reason\": \"trolling\"}\n    \n        with allure.step(\"Filing complaint on message\"):\n            response = api_client.post_token_s(f\"api/v1/complaint/send/{api_client.xnodeid}\", json=data)\n    \n        with allure.step(\"Asserting response status code\"):\n>           assert response.status_code == 200, \"Response status code is not 200\"\nE           AssertionError: Response status code is not 200\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:235: AssertionError",
    "steps" : [ {
      "name" : "Filing complaint on message",
      "time" : {
        "start" : 1713774297007,
        "stop" : 1713774297597,
        "duration" : 590
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Asserting response status code",
      "time" : {
        "start" : 1713774297598,
        "stop" : 1713774297598,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 235, in test_send_complaint\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1713774374062,
      "stop" : 1713774374062,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Sending Complaints"
  }, {
    "name" : "story",
    "value" : "Filing Complaint on Message"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "41e1a3701343"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 72,
        "unknown" : 0,
        "total" : 77
      },
      "items" : [ {
        "uid" : "7dee2ccaf9d731a2",
        "status" : "passed",
        "time" : {
          "start" : 1713748612137,
          "stop" : 1713748612644,
          "duration" : 507
        }
      }, {
        "uid" : "694d5b8146144589",
        "status" : "passed",
        "time" : {
          "start" : 1713716543759,
          "stop" : 1713716544236,
          "duration" : 477
        }
      }, {
        "uid" : "8418aedb7f7fdebf",
        "status" : "passed",
        "time" : {
          "start" : 1713687677161,
          "stop" : 1713687677601,
          "duration" : 440
        }
      }, {
        "uid" : "e43cb221c5a7318d",
        "status" : "passed",
        "time" : {
          "start" : 1713662404454,
          "stop" : 1713662404991,
          "duration" : 537
        }
      }, {
        "uid" : "5858a4771d9db434",
        "status" : "passed",
        "time" : {
          "start" : 1713630131853,
          "stop" : 1713630132848,
          "duration" : 995
        }
      }, {
        "uid" : "75c5e6d2be7591f8",
        "status" : "passed",
        "time" : {
          "start" : 1713575667897,
          "stop" : 1713575668724,
          "duration" : 827
        }
      }, {
        "uid" : "66a75f62277761f1",
        "status" : "passed",
        "time" : {
          "start" : 1713543867331,
          "stop" : 1713543868191,
          "duration" : 860
        }
      }, {
        "uid" : "e21e2a0bd9559865",
        "status" : "passed",
        "time" : {
          "start" : 1713514961005,
          "stop" : 1713514961873,
          "duration" : 868
        }
      }, {
        "uid" : "f77bcc4d71e1bf5b",
        "status" : "passed",
        "time" : {
          "start" : 1713489883184,
          "stop" : 1713489884067,
          "duration" : 883
        }
      }, {
        "uid" : "4beb0ed5b1b4bcc9",
        "status" : "passed",
        "time" : {
          "start" : 1713457404201,
          "stop" : 1713457404822,
          "duration" : 621
        }
      }, {
        "uid" : "39da185a9d5ac902",
        "status" : "passed",
        "time" : {
          "start" : 1713428589178,
          "stop" : 1713428589934,
          "duration" : 756
        }
      }, {
        "uid" : "5eb6029631a0f8b1",
        "status" : "passed",
        "time" : {
          "start" : 1713402840537,
          "stop" : 1713402841004,
          "duration" : 467
        }
      }, {
        "uid" : "5c8fdbf69767ebca",
        "status" : "passed",
        "time" : {
          "start" : 1713371075842,
          "stop" : 1713371077181,
          "duration" : 1339
        }
      }, {
        "uid" : "cfda7cb96904d459",
        "status" : "passed",
        "time" : {
          "start" : 1713342721350,
          "stop" : 1713342721929,
          "duration" : 579
        }
      }, {
        "uid" : "e0cc88970cbf7b7b",
        "status" : "passed",
        "time" : {
          "start" : 1713316484096,
          "stop" : 1713316484882,
          "duration" : 786
        }
      }, {
        "uid" : "441dda1e6b6a36a5",
        "status" : "passed",
        "time" : {
          "start" : 1713285172957,
          "stop" : 1713285173921,
          "duration" : 964
        }
      }, {
        "uid" : "9736b70d37eb1784",
        "status" : "passed",
        "time" : {
          "start" : 1713255766039,
          "stop" : 1713255767104,
          "duration" : 1065
        }
      }, {
        "uid" : "dbf85cb840a60112",
        "status" : "passed",
        "time" : {
          "start" : 1713230041719,
          "stop" : 1713230042275,
          "duration" : 556
        }
      }, {
        "uid" : "15b521dfd4958ec7",
        "status" : "passed",
        "time" : {
          "start" : 1713198156969,
          "stop" : 1713198157604,
          "duration" : 635
        }
      }, {
        "uid" : "284e31b823dddf07",
        "status" : "passed",
        "time" : {
          "start" : 1713169135479,
          "stop" : 1713169136027,
          "duration" : 548
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "1df3b912316e5908.json",
  "parameterValues" : [ ]
}