{
  "uid" : "49684700bcd84eb2",
  "name" : "test_delete_dmsg",
  "fullName" : "test.test_messages_functionality#test_delete_dmsg",
  "historyId" : "f19e9c8f1ee94d8815bdda0bfa138b0a",
  "time" : {
    "start" : 1712062636841,
    "stop" : 1712062696988,
    "duration" : 60147
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f1855a83040>\n\n    @allure.feature(\"Message Operations\")\n    @allure.story(\"Deleting Messages\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_delete_dmsg(api_client):\n        with allure.step(\"Checking if event_id is available\"):\n            event_id = os.environ.get(\"EVENT_ID_B\")\n    \n            # Проверка, что event_id был получен в предыдущем тесте\n            if event_id is None:\n                responseB = api_client.sendmessages(response_a=False)\n                event_id = os.environ.get(\"EVENT_ID_B\")\n    \n        with allure.step(\"Sending DELETE request to delete message\"):\n            response = api_client.delete_token_s(f\"api/v1/synapse/message/{api_client.roomB}%3A{api_client.room_second_part}/{event_id}\")\n    \n            with allure.step(\"Asserting response status code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 504 == 200\nE                +  where 504 = <Response [504]>.status_code\n\ntest/test_messages_functionality.py:323: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1712062556842,
      "stop" : 1712062556842,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1712062554138,
      "stop" : 1712062556842,
      "duration" : 2704
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "config",
    "time" : {
      "start" : 1712062554138,
      "stop" : 1712062554138,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f1855a83040>\n\n    @allure.feature(\"Message Operations\")\n    @allure.story(\"Deleting Messages\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_delete_dmsg(api_client):\n        with allure.step(\"Checking if event_id is available\"):\n            event_id = os.environ.get(\"EVENT_ID_B\")\n    \n            # Проверка, что event_id был получен в предыдущем тесте\n            if event_id is None:\n                responseB = api_client.sendmessages(response_a=False)\n                event_id = os.environ.get(\"EVENT_ID_B\")\n    \n        with allure.step(\"Sending DELETE request to delete message\"):\n            response = api_client.delete_token_s(f\"api/v1/synapse/message/{api_client.roomB}%3A{api_client.room_second_part}/{event_id}\")\n    \n            with allure.step(\"Asserting response status code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 504 == 200\nE                +  where 504 = <Response [504]>.status_code\n\ntest/test_messages_functionality.py:323: AssertionError",
    "steps" : [ {
      "name" : "Checking if event_id is available",
      "time" : {
        "start" : 1712062636841,
        "stop" : 1712062636841,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Sending DELETE request to delete message",
      "time" : {
        "start" : 1712062636841,
        "stop" : 1712062696988,
        "duration" : 60147
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 323, in test_delete_dmsg\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Asserting response status code",
        "time" : {
          "start" : 1712062696987,
          "stop" : 1712062696988,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 323, in test_delete_dmsg\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 3
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1712062701037,
      "stop" : 1712062701037,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "Message Operations"
  }, {
    "name" : "story",
    "value" : "Deleting Messages"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "9d6ecbb80526"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "97b244a1f7d9c7ea",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code",
        "time" : {
          "start" : 1712057047110,
          "stop" : 1712057107220,
          "duration" : 60110
        }
      }, {
        "uid" : "27fdf052853fbc2d",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: File target.json not found",
        "time" : {
          "start" : 1712056717992,
          "stop" : 1712056717992,
          "duration" : 0
        }
      }, {
        "uid" : "403a2519d7f31283",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/usr/workspace/target.json'",
        "time" : {
          "start" : 1712056501424,
          "stop" : 1712056501424,
          "duration" : 0
        }
      }, {
        "uid" : "eed387825774e686",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/usr/workspace/target.json'",
        "time" : {
          "start" : 1712055502731,
          "stop" : 1712055502731,
          "duration" : 0
        }
      }, {
        "uid" : "20adc2c17823a492",
        "status" : "broken",
        "statusDetails" : "FileNotFoundError: [Errno 2] No such file or directory: '/usr/workspace/target.json'",
        "time" : {
          "start" : 1712053563600,
          "stop" : 1712053563600,
          "duration" : 0
        }
      }, {
        "uid" : "efa3b868e8f5d5dd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code",
        "time" : {
          "start" : 1712052167631,
          "stop" : 1712052227823,
          "duration" : 60192
        }
      }, {
        "uid" : "c082b15ce9b0055b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code",
        "time" : {
          "start" : 1712049675647,
          "stop" : 1712049735770,
          "duration" : 60123
        }
      }, {
        "uid" : "54390499faacf349",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code",
        "time" : {
          "start" : 1712042058529,
          "stop" : 1712042118665,
          "duration" : 60136
        }
      }, {
        "uid" : "e77292e55f23047f",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 504 == 200\n +  where 504 = <Response [504]>.status_code",
        "time" : {
          "start" : 1711622017683,
          "stop" : 1711622077825,
          "duration" : 60142
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "49684700bcd84eb2.json",
  "parameterValues" : [ ]
}