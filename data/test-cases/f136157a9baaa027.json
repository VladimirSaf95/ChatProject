{
  "uid" : "f136157a9baaa027",
  "name" : "test_send_gif",
  "fullName" : "test.test_messages_functionality#test_send_gif",
  "historyId" : "e2c73fa8c2349ddfce495417c4df003c",
  "time" : {
    "start" : 1719937633125,
    "stop" : 1719937633824,
    "duration" : 699
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f6b997756a0>\n\n    @allure.feature(\"Sending GIFs\")\n    @allure.story(\"Sending GIF in Chat\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_gif(api_client):\n        data = {\n            \"msgtype\": \"m.gif\",\n            \"format\": \"org.matrix.custom.html\",\n            \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\",\n            \"body\": \"{\\\"type\\\":\\\"GIF\\\",\\\"imgUrl\\\":\\\"https://media.tenor.com/2w1XsfvQD5kAAAAM/hhgf.gif\\\"}\"\n        }\n    \n        with allure.step(\"Sending GIF message\"):\n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n        with allure.step(\"Asserting response status code\"):\n>           assert response.status_code == 200, \"Response status code is not 200\"\nE           AssertionError: Response status code is not 200\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:204: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1719937511554,
      "stop" : 1719937511554,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1719937508362,
      "stop" : 1719937508362,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1719937508362,
      "stop" : 1719937511554,
      "duration" : 3192
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f6b997756a0>\n\n    @allure.feature(\"Sending GIFs\")\n    @allure.story(\"Sending GIF in Chat\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_gif(api_client):\n        data = {\n            \"msgtype\": \"m.gif\",\n            \"format\": \"org.matrix.custom.html\",\n            \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\",\n            \"body\": \"{\\\"type\\\":\\\"GIF\\\",\\\"imgUrl\\\":\\\"https://media.tenor.com/2w1XsfvQD5kAAAAM/hhgf.gif\\\"}\"\n        }\n    \n        with allure.step(\"Sending GIF message\"):\n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n        with allure.step(\"Asserting response status code\"):\n>           assert response.status_code == 200, \"Response status code is not 200\"\nE           AssertionError: Response status code is not 200\nE           assert 500 == 200\nE            +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:204: AssertionError",
    "steps" : [ {
      "name" : "Sending GIF message",
      "time" : {
        "start" : 1719937633125,
        "stop" : 1719937633823,
        "duration" : 698
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Asserting response status code",
      "time" : {
        "start" : 1719937633823,
        "stop" : 1719937633824,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 204, in test_send_gif\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1719937648647,
      "stop" : 1719937648647,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "feature",
    "value" : "Sending GIFs"
  }, {
    "name" : "story",
    "value" : "Sending GIF in Chat"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "99f5e786f03f"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 14,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 251,
        "unknown" : 0,
        "total" : 269
      },
      "items" : [ {
        "uid" : "e17617313bb6853a",
        "status" : "passed",
        "time" : {
          "start" : 1719908685355,
          "stop" : 1719908686175,
          "duration" : 820
        }
      }, {
        "uid" : "b83d74cc750394d5",
        "status" : "passed",
        "time" : {
          "start" : 1719883353198,
          "stop" : 1719883354146,
          "duration" : 948
        }
      }, {
        "uid" : "c077828f350dce21",
        "status" : "passed",
        "time" : {
          "start" : 1719851054911,
          "stop" : 1719851055379,
          "duration" : 468
        }
      }, {
        "uid" : "fff9eb59f14e0f9b",
        "status" : "passed",
        "time" : {
          "start" : 1719822386029,
          "stop" : 1719822389067,
          "duration" : 3038
        }
      }, {
        "uid" : "3ca1d18495ac03c3",
        "status" : "passed",
        "time" : {
          "start" : 1719218117795,
          "stop" : 1719218118657,
          "duration" : 862
        }
      }, {
        "uid" : "b6e51973c2155b9e",
        "status" : "passed",
        "time" : {
          "start" : 1719192161466,
          "stop" : 1719192162114,
          "duration" : 648
        }
      }, {
        "uid" : "2aa81e2cbdff69e7",
        "status" : "passed",
        "time" : {
          "start" : 1719159769176,
          "stop" : 1719159770529,
          "duration" : 1353
        }
      }, {
        "uid" : "4adc30afbe465f19",
        "status" : "passed",
        "time" : {
          "start" : 1719130914071,
          "stop" : 1719130914787,
          "duration" : 716
        }
      }, {
        "uid" : "d3f0f6f5dfa55356",
        "status" : "passed",
        "time" : {
          "start" : 1719105964200,
          "stop" : 1719105964966,
          "duration" : 766
        }
      }, {
        "uid" : "8abde89c718e00c0",
        "status" : "passed",
        "time" : {
          "start" : 1719073480646,
          "stop" : 1719073481350,
          "duration" : 704
        }
      }, {
        "uid" : "aebfa399c78b20c0",
        "status" : "passed",
        "time" : {
          "start" : 1719044599325,
          "stop" : 1719044600292,
          "duration" : 967
        }
      }, {
        "uid" : "7f757fc80212ddfd",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1719019270310,
          "stop" : 1719019271000,
          "duration" : 690
        }
      }, {
        "uid" : "85c86060ee04db88",
        "status" : "passed",
        "time" : {
          "start" : 1718987016693,
          "stop" : 1718987017110,
          "duration" : 417
        }
      }, {
        "uid" : "27e31e94c60f9acd",
        "status" : "passed",
        "time" : {
          "start" : 1718958827898,
          "stop" : 1718958828298,
          "duration" : 400
        }
      }, {
        "uid" : "d43a1a3379809b7d",
        "status" : "passed",
        "time" : {
          "start" : 1718932841128,
          "stop" : 1718932841605,
          "duration" : 477
        }
      }, {
        "uid" : "873a7b018a766dc9",
        "status" : "passed",
        "time" : {
          "start" : 1718900782565,
          "stop" : 1718900783234,
          "duration" : 669
        }
      }, {
        "uid" : "9542db603ccc547",
        "status" : "passed",
        "time" : {
          "start" : 1718871901256,
          "stop" : 1718871902121,
          "duration" : 865
        }
      }, {
        "uid" : "1fccb85b1939fe4f",
        "status" : "passed",
        "time" : {
          "start" : 1718846408173,
          "stop" : 1718846408868,
          "duration" : 695
        }
      }, {
        "uid" : "3334ac39e732cf27",
        "status" : "passed",
        "time" : {
          "start" : 1718814835087,
          "stop" : 1718814836000,
          "duration" : 913
        }
      }, {
        "uid" : "d2998d6288929a7f",
        "status" : "passed",
        "time" : {
          "start" : 1718785496611,
          "stop" : 1718785497711,
          "duration" : 1100
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f136157a9baaa027.json",
  "parameterValues" : [ ]
}