{
  "uid" : "f1e0739d9a774b3f",
  "name" : "test_send_emoji",
  "fullName" : "test.test_messages_functionality#test_send_emoji",
  "historyId" : "7bb320f962adcc3b1847931bf3d7efa9",
  "time" : {
    "start" : 1719019266022,
    "stop" : 1719019266797,
    "duration" : 775
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fa338c23640>\n\n    @allure.feature(\"Sending Messages\")\n    @allure.story(\"Sending Emoji\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_emoji(api_client):\n        with allure.step(\"Sending emoji and checking response\"):\n            data = {\"body\": \"\uD83D\uDE05\", \"msgtype\": \"m.text\", \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:57: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1719019209948,
      "stop" : 1719019209948,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1719019145820,
      "stop" : 1719019145820,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1719019145820,
      "stop" : 1719019209947,
      "duration" : 64127
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fa338c23640>\n\n    @allure.feature(\"Sending Messages\")\n    @allure.story(\"Sending Emoji\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_emoji(api_client):\n        with allure.step(\"Sending emoji and checking response\"):\n            data = {\"body\": \"\uD83D\uDE05\", \"msgtype\": \"m.text\", \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data)\n    \n            with allure.step(\"Check response code\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:57: AssertionError",
    "steps" : [ {
      "name" : "Sending emoji and checking response",
      "time" : {
        "start" : 1719019266022,
        "stop" : 1719019266797,
        "duration" : 775
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 57, in test_send_emoji\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Check response code",
        "time" : {
          "start" : 1719019266797,
          "stop" : 1719019266797,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 57, in test_send_emoji\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1719019349653,
      "stop" : 1719019349653,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Sending Messages"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "Sending Emoji"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "21851eb13c55"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 13,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 240,
        "unknown" : 0,
        "total" : 257
      },
      "items" : [ {
        "uid" : "5c4a643bf82c6d93",
        "status" : "passed",
        "time" : {
          "start" : 1718987013299,
          "stop" : 1718987013855,
          "duration" : 556
        }
      }, {
        "uid" : "637ca9cf8e795c47",
        "status" : "passed",
        "time" : {
          "start" : 1718958824263,
          "stop" : 1718958824960,
          "duration" : 697
        }
      }, {
        "uid" : "110a3496dcb5e8d5",
        "status" : "passed",
        "time" : {
          "start" : 1718932837494,
          "stop" : 1718932838434,
          "duration" : 940
        }
      }, {
        "uid" : "56aea3357ad03746",
        "status" : "passed",
        "time" : {
          "start" : 1718900779590,
          "stop" : 1718900780102,
          "duration" : 512
        }
      }, {
        "uid" : "9ae76a9113c9509a",
        "status" : "passed",
        "time" : {
          "start" : 1718871897495,
          "stop" : 1718871898389,
          "duration" : 894
        }
      }, {
        "uid" : "b07c6106d6b8a769",
        "status" : "passed",
        "time" : {
          "start" : 1718846405208,
          "stop" : 1718846405737,
          "duration" : 529
        }
      }, {
        "uid" : "7eaa618e8a6c55b3",
        "status" : "passed",
        "time" : {
          "start" : 1718814830746,
          "stop" : 1718814831777,
          "duration" : 1031
        }
      }, {
        "uid" : "cf472d56ec756deb",
        "status" : "passed",
        "time" : {
          "start" : 1718785492724,
          "stop" : 1718785493355,
          "duration" : 631
        }
      }, {
        "uid" : "e7219d87a11c89d2",
        "status" : "passed",
        "time" : {
          "start" : 1718760123003,
          "stop" : 1718760123501,
          "duration" : 498
        }
      }, {
        "uid" : "42ca22c6af690256",
        "status" : "passed",
        "time" : {
          "start" : 1718727894252,
          "stop" : 1718727894761,
          "duration" : 509
        }
      }, {
        "uid" : "1b90706a4267217d",
        "status" : "passed",
        "time" : {
          "start" : 1718699690773,
          "stop" : 1718699691740,
          "duration" : 967
        }
      }, {
        "uid" : "f0af489a393ce9e8",
        "status" : "passed",
        "time" : {
          "start" : 1718673708065,
          "stop" : 1718673708487,
          "duration" : 422
        }
      }, {
        "uid" : "9e2437881529498e",
        "status" : "passed",
        "time" : {
          "start" : 1718642073234,
          "stop" : 1718642073999,
          "duration" : 765
        }
      }, {
        "uid" : "48a02f48125ea2d1",
        "status" : "passed",
        "time" : {
          "start" : 1718612712115,
          "stop" : 1718612712595,
          "duration" : 480
        }
      }, {
        "uid" : "e4b42b7507534e84",
        "status" : "passed",
        "time" : {
          "start" : 1718587438935,
          "stop" : 1718587439388,
          "duration" : 453
        }
      }, {
        "uid" : "9d1c41eababfc1e6",
        "status" : "passed",
        "time" : {
          "start" : 1718555530506,
          "stop" : 1718555531467,
          "duration" : 961
        }
      }, {
        "uid" : "f76dec3e5c748a00",
        "status" : "passed",
        "time" : {
          "start" : 1718526153413,
          "stop" : 1718526153962,
          "duration" : 549
        }
      }, {
        "uid" : "612d7c1c18af6017",
        "status" : "passed",
        "time" : {
          "start" : 1718501226045,
          "stop" : 1718501226468,
          "duration" : 423
        }
      }, {
        "uid" : "f5f5c718bd096bb0",
        "status" : "passed",
        "time" : {
          "start" : 1718468636043,
          "stop" : 1718468636491,
          "duration" : 448
        }
      }, {
        "uid" : "bb0241a14bd483c4",
        "status" : "passed",
        "time" : {
          "start" : 1718439774465,
          "stop" : 1718439774955,
          "duration" : 490
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "f1e0739d9a774b3f.json",
  "parameterValues" : [ ]
}