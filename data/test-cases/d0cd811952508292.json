{
  "uid" : "d0cd811952508292",
  "name" : "test_click_chat_room",
  "fullName" : "test.test_changeroom#test_click_chat_room",
  "historyId" : "be97e1ba70b4c1a08c49976b38facb9c",
  "time" : {
    "start" : 1711621981779,
    "stop" : 1711621992590,
    "duration" : 10811
  },
  "status" : "failed",
  "statusMessage" : "Failed: Room A items not found or empty",
  "statusTrace" : "app = <fixture.application.Application object at 0x7faa81c9d550>\n\n    @allure.feature(\"Chat Rooms\")\n    @allure.story(\"Clicking Chat Room\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_click_chat_room(app):\n    \n        with allure.step(\"Checking if chat button exists\"):\n            helper_base = HelperBase(app)\n            # Проверяем, если чат открыт, если нет, то открываем\n            if not helper_base.check_chatbutton_existence():\n                helper_base.clickchatbutton()\n                # Даем время для загрузки каналов\n                time.sleep(5)\n    \n        # Получаем селекторы для комнат A и B\n        selectorA = f'[data-test-id-roomitem=\"chat-carouselRooms-room{app.roomA}:{app.room_second_part}\"]'\n        selectorB = f'[data-test-id-roomitem=\"chat-carouselRooms-room{app.roomB}:{app.room_second_part}\"]'\n    \n        # Получаем элементы для комнаты A\n        room_items_A = helper_base.find_elements_by_css_selector(selectorA)\n    \n        # Если список пустой, то прерываем тест\n        if not room_items_A:\n>           pytest.fail(\"Room A items not found or empty\")\nE           Failed: Room A items not found or empty\n\ntest/test_changeroom.py:29: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "config",
    "time" : {
      "start" : 1711621940899,
      "stop" : 1711621940900,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1711621980697,
      "stop" : 1711621981778,
      "duration" : 1081
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1711621940900,
      "stop" : 1711621943730,
      "duration" : 2830
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_client",
    "time" : {
      "start" : 1711621943730,
      "stop" : 1711621943731,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Failed: Room A items not found or empty",
    "statusTrace" : "app = <fixture.application.Application object at 0x7faa81c9d550>\n\n    @allure.feature(\"Chat Rooms\")\n    @allure.story(\"Clicking Chat Room\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_click_chat_room(app):\n    \n        with allure.step(\"Checking if chat button exists\"):\n            helper_base = HelperBase(app)\n            # Проверяем, если чат открыт, если нет, то открываем\n            if not helper_base.check_chatbutton_existence():\n                helper_base.clickchatbutton()\n                # Даем время для загрузки каналов\n                time.sleep(5)\n    \n        # Получаем селекторы для комнат A и B\n        selectorA = f'[data-test-id-roomitem=\"chat-carouselRooms-room{app.roomA}:{app.room_second_part}\"]'\n        selectorB = f'[data-test-id-roomitem=\"chat-carouselRooms-room{app.roomB}:{app.room_second_part}\"]'\n    \n        # Получаем элементы для комнаты A\n        room_items_A = helper_base.find_elements_by_css_selector(selectorA)\n    \n        # Если список пустой, то прерываем тест\n        if not room_items_A:\n>           pytest.fail(\"Room A items not found or empty\")\nE           Failed: Room A items not found or empty\n\ntest/test_changeroom.py:29: Failed",
    "steps" : [ {
      "name" : "Checking if chat button exists",
      "time" : {
        "start" : 1711621981779,
        "stop" : 1711621992572,
        "duration" : 10793
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "60d64df7649850f7",
      "name" : "log",
      "source" : "60d64df7649850f7.txt",
      "type" : "text/plain",
      "size" : 133
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "app::0",
    "time" : {
      "start" : 1711622081453,
      "stop" : 1711622081522,
      "duration" : 69
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_client::0",
    "time" : {
      "start" : 1711622081523,
      "stop" : 1711622081523,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Chat Rooms"
  }, {
    "name" : "story",
    "value" : "Clicking Chat Room"
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_changeroom"
  }, {
    "name" : "host",
    "value" : "658556c451aa"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_changeroom"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d0cd811952508292.json",
  "parameterValues" : [ ]
}