{
  "uid" : "b369275e35ffd191",
  "name" : "test_unblock_players",
  "fullName" : "test.test_block_and_unblock#test_unblock_players",
  "historyId" : "7c0ba69dbab38077018a8fbc2f4cc147",
  "time" : {
    "start" : 1714580521502,
    "stop" : 1714580545708,
    "duration" : 24206
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: The 'total' value did not decrease by one\nassert 1 == (1 - 1)",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f805c3795e0>\n\n    @pytest.mark.dependency(depends=[\"block_players\"])\n    @allure.feature(\"User Management\")\n    @allure.story(\"Unblocking Players\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_unblock_players(api_client):\n        with allure.step(\"Waiting for previous operations to complete\"):\n            # Задержка по времени необходимо для того, чтобы успел отработать запрос по блокировке игрока\n            time.sleep(20)\n    \n        with allure.step(\"Fetching information about blocked players before unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ДО\n            getuserbanbefore = api_client.getuserban()\n            total_before = getuserbanbefore.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Preparing data for unblocking user\"):\n            # Подготовка данных для POST-запроса\n            data = {\n                \"nodeUid\": api_client.xnodeid,\n                \"roomUid\": api_client.roomB,\n                \"userUid\": f\"@{api_client.senderid}\"\n            }\n    \n            # Используйте quote для каждого параметра, который требует URL-кодирования\n            url = (\n                f\"api/v1/synapse/user/ban?\"\n                f\"nodeUid={quote(api_client.xnodeid)}&\"\n                f\"userUid={quote(f'@{api_client.senderid}')}%3A{api_client.room_second_part}&\"\n                f\"roomUid={quote(api_client.roomB)}%3A{api_client.room_second_part}&\"\n            )\n    \n        with allure.step(\"Sending request to unblock user\"):\n            response = api_client.delete_token_s(url, json=data)\n            # Необходима задержка, чтобы успел отработать запрос на получение забаненных юзеров\n            time.sleep(3)\n            print(\"URL запроса:\", response.url)\n    \n        with allure.step(\"Asserting response status code\"):\n            assert response.status_code == 200, \"Response status code is not 200\"\n    \n        with allure.step(\"Fetching information about blocked players after unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ПОСЛЕ\n            getuserbanafter = api_client.getuserban()\n            total_after = getuserbanafter.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Asserting response content\"):\n            # Проверка, что нужный ключ есть в ответе\n            assert \"total\" in getuserbanbefore.json()[\"pagination\"], \"The key 'total' is not found in the JSON response before\"\n            assert \"total\" in getuserbanafter.json()[\"pagination\"], \"The key 'total' is not found in the JSON response after\"\n    \n            # Проверка, что забаненных игроков уменьшилось на один\n>           assert total_after == total_before - 1, \"The 'total' value did not decrease by one\"\nE           AssertionError: The 'total' value did not decrease by one\nE           assert 1 == (1 - 1)\n\ntest/test_block_and_unblock.py:148: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "init_authorization",
    "time" : {
      "start" : 1714580505774,
      "stop" : 1714580509950,
      "duration" : 4176
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_client",
    "time" : {
      "start" : 1714580509950,
      "stop" : 1714580509951,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1714580505773,
      "stop" : 1714580505773,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: The 'total' value did not decrease by one\nassert 1 == (1 - 1)",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f805c3795e0>\n\n    @pytest.mark.dependency(depends=[\"block_players\"])\n    @allure.feature(\"User Management\")\n    @allure.story(\"Unblocking Players\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_unblock_players(api_client):\n        with allure.step(\"Waiting for previous operations to complete\"):\n            # Задержка по времени необходимо для того, чтобы успел отработать запрос по блокировке игрока\n            time.sleep(20)\n    \n        with allure.step(\"Fetching information about blocked players before unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ДО\n            getuserbanbefore = api_client.getuserban()\n            total_before = getuserbanbefore.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Preparing data for unblocking user\"):\n            # Подготовка данных для POST-запроса\n            data = {\n                \"nodeUid\": api_client.xnodeid,\n                \"roomUid\": api_client.roomB,\n                \"userUid\": f\"@{api_client.senderid}\"\n            }\n    \n            # Используйте quote для каждого параметра, который требует URL-кодирования\n            url = (\n                f\"api/v1/synapse/user/ban?\"\n                f\"nodeUid={quote(api_client.xnodeid)}&\"\n                f\"userUid={quote(f'@{api_client.senderid}')}%3A{api_client.room_second_part}&\"\n                f\"roomUid={quote(api_client.roomB)}%3A{api_client.room_second_part}&\"\n            )\n    \n        with allure.step(\"Sending request to unblock user\"):\n            response = api_client.delete_token_s(url, json=data)\n            # Необходима задержка, чтобы успел отработать запрос на получение забаненных юзеров\n            time.sleep(3)\n            print(\"URL запроса:\", response.url)\n    \n        with allure.step(\"Asserting response status code\"):\n            assert response.status_code == 200, \"Response status code is not 200\"\n    \n        with allure.step(\"Fetching information about blocked players after unblocking\"):\n            # Получаем информацию о том, сколько было забанненых игроков ПОСЛЕ\n            getuserbanafter = api_client.getuserban()\n            total_after = getuserbanafter.json()[\"pagination\"][\"total\"]\n    \n        with allure.step(\"Asserting response content\"):\n            # Проверка, что нужный ключ есть в ответе\n            assert \"total\" in getuserbanbefore.json()[\"pagination\"], \"The key 'total' is not found in the JSON response before\"\n            assert \"total\" in getuserbanafter.json()[\"pagination\"], \"The key 'total' is not found in the JSON response after\"\n    \n            # Проверка, что забаненных игроков уменьшилось на один\n>           assert total_after == total_before - 1, \"The 'total' value did not decrease by one\"\nE           AssertionError: The 'total' value did not decrease by one\nE           assert 1 == (1 - 1)\n\ntest/test_block_and_unblock.py:148: AssertionError",
    "steps" : [ {
      "name" : "Waiting for previous operations to complete",
      "time" : {
        "start" : 1714580521503,
        "stop" : 1714580541523,
        "duration" : 20020
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Fetching information about blocked players before unblocking",
      "time" : {
        "start" : 1714580541523,
        "stop" : 1714580542112,
        "duration" : 589
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Preparing data for unblocking user",
      "time" : {
        "start" : 1714580542112,
        "stop" : 1714580542112,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Sending request to unblock user",
      "time" : {
        "start" : 1714580542112,
        "stop" : 1714580545423,
        "duration" : 3311
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Asserting response status code",
      "time" : {
        "start" : 1714580545423,
        "stop" : 1714580545423,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Fetching information about blocked players after unblocking",
      "time" : {
        "start" : 1714580545423,
        "stop" : 1714580545708,
        "duration" : 285
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Asserting response content",
      "time" : {
        "start" : 1714580545708,
        "stop" : 1714580545708,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: The 'total' value did not decrease by one\nassert 1 == (1 - 1)\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_block_and_unblock.py\", line 148, in test_unblock_players\n    assert total_after == total_before - 1, \"The 'total' value did not decrease by one\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 7,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1714581234570,
      "stop" : 1714581234570,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "feature",
    "value" : "User Management"
  }, {
    "name" : "story",
    "value" : "Unblocking Players"
  }, {
    "name" : "tag",
    "value" : "dependency(depends=['block_players'])"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_block_and_unblock"
  }, {
    "name" : "host",
    "value" : "c20363ed405c"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_block_and_unblock"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 98,
        "unknown" : 0,
        "total" : 104
      },
      "items" : [ {
        "uid" : "436a29740b343531",
        "status" : "passed",
        "time" : {
          "start" : 1714551943759,
          "stop" : 1714551972116,
          "duration" : 28357
        }
      }, {
        "uid" : "a2ea34999d68e6d",
        "status" : "passed",
        "time" : {
          "start" : 1714526393617,
          "stop" : 1714526418262,
          "duration" : 24645
        }
      }, {
        "uid" : "5bcff0ba501deb66",
        "status" : "passed",
        "time" : {
          "start" : 1714494159504,
          "stop" : 1714494187471,
          "duration" : 27967
        }
      }, {
        "uid" : "441f0e23a9bed440",
        "status" : "passed",
        "time" : {
          "start" : 1714465345618,
          "stop" : 1714465371104,
          "duration" : 25486
        }
      }, {
        "uid" : "2fa484a4a3f77d86",
        "status" : "passed",
        "time" : {
          "start" : 1714439670399,
          "stop" : 1714439695855,
          "duration" : 25456
        }
      }, {
        "uid" : "758a87edfbeacf5b",
        "status" : "passed",
        "time" : {
          "start" : 1714407720329,
          "stop" : 1714407747703,
          "duration" : 27374
        }
      }, {
        "uid" : "a63f4e48bf936cc9",
        "status" : "passed",
        "time" : {
          "start" : 1714379020639,
          "stop" : 1714379046845,
          "duration" : 26206
        }
      }, {
        "uid" : "4d2a7ad58e5f3912",
        "status" : "passed",
        "time" : {
          "start" : 1714353360255,
          "stop" : 1714353385820,
          "duration" : 25565
        }
      }, {
        "uid" : "e4c7cd3ee31f83ac",
        "status" : "passed",
        "time" : {
          "start" : 1714321220183,
          "stop" : 1714321246525,
          "duration" : 26342
        }
      }, {
        "uid" : "fba5ce8eb03c1b2f",
        "status" : "passed",
        "time" : {
          "start" : 1714292515670,
          "stop" : 1714292540668,
          "duration" : 24998
        }
      }, {
        "uid" : "1cb0d10667eaa312",
        "status" : "passed",
        "time" : {
          "start" : 1714267181501,
          "stop" : 1714267207196,
          "duration" : 25695
        }
      }, {
        "uid" : "e289c91b2641dcba",
        "status" : "passed",
        "time" : {
          "start" : 1714234798740,
          "stop" : 1714234824111,
          "duration" : 25371
        }
      }, {
        "uid" : "f4d63bb174164986",
        "status" : "passed",
        "time" : {
          "start" : 1714180402500,
          "stop" : 1714180427808,
          "duration" : 25308
        }
      }, {
        "uid" : "994c8aeb378fcdd5",
        "status" : "passed",
        "time" : {
          "start" : 1714148623927,
          "stop" : 1714148651394,
          "duration" : 27467
        }
      }, {
        "uid" : "b0372deb4e1f3e64",
        "status" : "passed",
        "time" : {
          "start" : 1714119704299,
          "stop" : 1714119729550,
          "duration" : 25251
        }
      }, {
        "uid" : "c1235217d4bf8cd0",
        "status" : "passed",
        "time" : {
          "start" : 1714094092339,
          "stop" : 1714094117538,
          "duration" : 25199
        }
      }, {
        "uid" : "7d365be12adf7dac",
        "status" : "passed",
        "time" : {
          "start" : 1714062109912,
          "stop" : 1714062136459,
          "duration" : 26547
        }
      }, {
        "uid" : "4761ce09552df2a8",
        "status" : "passed",
        "time" : {
          "start" : 1714033391788,
          "stop" : 1714033419125,
          "duration" : 27337
        }
      }, {
        "uid" : "e3221cf4384ed9ec",
        "status" : "passed",
        "time" : {
          "start" : 1714007780629,
          "stop" : 1714007806615,
          "duration" : 25986
        }
      }, {
        "uid" : "823681f50ddbd3f3",
        "status" : "passed",
        "time" : {
          "start" : 1713975701165,
          "stop" : 1713975727865,
          "duration" : 26700
        }
      } ]
    },
    "tags" : [ "dependency(depends=['block_players'])" ]
  },
  "source" : "b369275e35ffd191.json",
  "parameterValues" : [ ]
}