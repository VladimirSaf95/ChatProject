{
  "uid" : "40767525342935fe",
  "name" : "test_send_not_allow_symbol",
  "fullName" : "test.test_messages_functionality#test_send_not_allow_symbol",
  "historyId" : "a7c8da64ecec62788bdb01ada3b6be57",
  "time" : {
    "start" : 1716625389549,
    "stop" : 1716625389734,
    "duration" : 185
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f7ceef3df40>\n\n    @allure.feature(\"Sending Symbols\")\n    @allure.story(\"Sending Disallowed Symbol\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_not_allow_symbol(api_client):\n        with allure.step(\"Sending disallowed symbol\"):\n            data_url1 = {\"body\": \"LOL\", \"msgtype\": \"m.text\",\n                         \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data_url1)\n    \n            with allure.step(\"Asserting response for disallowed symbol\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:179: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "config",
    "time" : {
      "start" : 1716625336113,
      "stop" : 1716625336113,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1716625336113,
      "stop" : 1716625339260,
      "duration" : 3147
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_client",
    "time" : {
      "start" : 1716625339260,
      "stop" : 1716625339260,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7f7ceef3df40>\n\n    @allure.feature(\"Sending Symbols\")\n    @allure.story(\"Sending Disallowed Symbol\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_not_allow_symbol(api_client):\n        with allure.step(\"Sending disallowed symbol\"):\n            data_url1 = {\"body\": \"LOL\", \"msgtype\": \"m.text\",\n                         \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                              json=data_url1)\n    \n            with allure.step(\"Asserting response for disallowed symbol\"):\n>               assert response.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:179: AssertionError",
    "steps" : [ {
      "name" : "Sending disallowed symbol",
      "time" : {
        "start" : 1716625389549,
        "stop" : 1716625389734,
        "duration" : 185
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 179, in test_send_not_allow_symbol\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Asserting response for disallowed symbol",
        "time" : {
          "start" : 1716625389734,
          "stop" : 1716625389734,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 179, in test_send_not_allow_symbol\n    assert response.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1716625395750,
      "stop" : 1716625395750,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "Sending Disallowed Symbol"
  }, {
    "name" : "feature",
    "value" : "Sending Symbols"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "d34fcdb105da"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 5,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 166,
        "unknown" : 0,
        "total" : 175
      },
      "items" : [ {
        "uid" : "f7cf2dd96b8666b9",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716599834225,
          "stop" : 1716599834703,
          "duration" : 478
        }
      }, {
        "uid" : "7466f74dd826489e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716567738688,
          "stop" : 1716567739161,
          "duration" : 473
        }
      }, {
        "uid" : "3d0fa22ae6d74924",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716539027685,
          "stop" : 1716539027870,
          "duration" : 185
        }
      }, {
        "uid" : "ac55758ffd38855e",
        "status" : "failed",
        "statusDetails" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
        "time" : {
          "start" : 1716513522074,
          "stop" : 1716513522532,
          "duration" : 458
        }
      }, {
        "uid" : "ff9de7d352e1f40b",
        "status" : "passed",
        "time" : {
          "start" : 1716481520387,
          "stop" : 1716481520645,
          "duration" : 258
        }
      }, {
        "uid" : "7f21d740c9bf6749",
        "status" : "passed",
        "time" : {
          "start" : 1716452598261,
          "stop" : 1716452598814,
          "duration" : 553
        }
      }, {
        "uid" : "dadcb86768d1f5e1",
        "status" : "passed",
        "time" : {
          "start" : 1716427084150,
          "stop" : 1716427084337,
          "duration" : 187
        }
      }, {
        "uid" : "a86c9290b9d8e20e",
        "status" : "passed",
        "time" : {
          "start" : 1716395151708,
          "stop" : 1716395151946,
          "duration" : 238
        }
      }, {
        "uid" : "7819df1752b470a5",
        "status" : "passed",
        "time" : {
          "start" : 1716366286651,
          "stop" : 1716366287100,
          "duration" : 449
        }
      }, {
        "uid" : "e470f75911ae0e85",
        "status" : "passed",
        "time" : {
          "start" : 1716340729053,
          "stop" : 1716340729477,
          "duration" : 424
        }
      }, {
        "uid" : "8fad7cda3e893b01",
        "status" : "passed",
        "time" : {
          "start" : 1716308595381,
          "stop" : 1716308595871,
          "duration" : 490
        }
      }, {
        "uid" : "7eded1841e383a2a",
        "status" : "passed",
        "time" : {
          "start" : 1716279823100,
          "stop" : 1716279823587,
          "duration" : 487
        }
      }, {
        "uid" : "61bd3a012f7b71fc",
        "status" : "passed",
        "time" : {
          "start" : 1716254298099,
          "stop" : 1716254298321,
          "duration" : 222
        }
      }, {
        "uid" : "ed01555365ca84b9",
        "status" : "passed",
        "time" : {
          "start" : 1716222264940,
          "stop" : 1716222265157,
          "duration" : 217
        }
      }, {
        "uid" : "44928b5e562ce3af",
        "status" : "passed",
        "time" : {
          "start" : 1716193443068,
          "stop" : 1716193443295,
          "duration" : 227
        }
      }, {
        "uid" : "eca08e757393d9da",
        "status" : "passed",
        "time" : {
          "start" : 1716167940787,
          "stop" : 1716167941031,
          "duration" : 244
        }
      }, {
        "uid" : "255874ed238321d1",
        "status" : "passed",
        "time" : {
          "start" : 1716136334977,
          "stop" : 1716136335649,
          "duration" : 672
        }
      }, {
        "uid" : "2211149ed3a91da9",
        "status" : "passed",
        "time" : {
          "start" : 1716107489520,
          "stop" : 1716107490007,
          "duration" : 487
        }
      }, {
        "uid" : "28c6a939bc61fd00",
        "status" : "passed",
        "time" : {
          "start" : 1716082360581,
          "stop" : 1716082361031,
          "duration" : 450
        }
      }, {
        "uid" : "628794680c7ebc08",
        "status" : "passed",
        "time" : {
          "start" : 1716049333400,
          "stop" : 1716049333626,
          "duration" : 226
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "40767525342935fe.json",
  "parameterValues" : [ ]
}