{
  "uid" : "d1f3a78f0bbb471a",
  "name" : "test_send_url",
  "fullName" : "test.test_messages_functionality#test_send_url",
  "historyId" : "4b0586f5f54c42dea3d6cdc7b39df69c",
  "time" : {
    "start" : 1713774294314,
    "stop" : 1713774294854,
    "duration" : 540
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
  "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fae154b7550>\n\n    @allure.feature(\"Sending URLs\")\n    @allure.story(\"Sending Allowed and Disallowed URLs\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_url(api_client):\n        with allure.step(\"Sending allowed URL\"):\n            data_url1 = {\"body\": \"google.com\", \"msgtype\": \"m.text\",\n                         \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response1 = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                               json=data_url1)\n    \n            with allure.step(\"Asserting response for allowed URL\"):\n>               assert response1.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:144: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "api_client",
    "time" : {
      "start" : 1713774219266,
      "stop" : 1713774219266,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "init_authorization",
    "time" : {
      "start" : 1713774208317,
      "stop" : 1713774219266,
      "duration" : 10949
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "config",
    "time" : {
      "start" : 1713774208317,
      "stop" : 1713774208317,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code",
    "statusTrace" : "api_client = <fixture.api_client.APIClient object at 0x7fae154b7550>\n\n    @allure.feature(\"Sending URLs\")\n    @allure.story(\"Sending Allowed and Disallowed URLs\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_send_url(api_client):\n        with allure.step(\"Sending allowed URL\"):\n            data_url1 = {\"body\": \"google.com\", \"msgtype\": \"m.text\",\n                         \"senderId\": f\"@{api_client.senderid}:{api_client.room_second_part}\"}\n    \n            response1 = api_client.post_token1(f\"{api_client.roomA}%3A{api_client.room_second_part}/send/m.room.message\",\n                                               json=data_url1)\n    \n            with allure.step(\"Asserting response for allowed URL\"):\n>               assert response1.status_code == 200, \"Response status code is not 200\"\nE               AssertionError: Response status code is not 200\nE               assert 500 == 200\nE                +  where 500 = <Response [500]>.status_code\n\ntest/test_messages_functionality.py:144: AssertionError",
    "steps" : [ {
      "name" : "Sending allowed URL",
      "time" : {
        "start" : 1713774294314,
        "stop" : 1713774294854,
        "duration" : 540
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
      "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 144, in test_send_url\n    assert response1.status_code == 200, \"Response status code is not 200\"\n",
      "steps" : [ {
        "name" : "Asserting response for allowed URL",
        "time" : {
          "start" : 1713774294854,
          "stop" : 1713774294854,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "AssertionError: Response status code is not 200\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code\n",
        "statusTrace" : "  File \"/usr/workspace/test/test_messages_functionality.py\", line 144, in test_send_url\n    assert response1.status_code == 200, \"Response status code is not 200\"\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "api_client::0",
    "time" : {
      "start" : 1713774374062,
      "stop" : 1713774374062,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "Sending Allowed and Disallowed URLs"
  }, {
    "name" : "feature",
    "value" : "Sending URLs"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_messages_functionality"
  }, {
    "name" : "host",
    "value" : "41e1a3701343"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_messages_functionality"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 72,
        "unknown" : 0,
        "total" : 77
      },
      "items" : [ {
        "uid" : "2035d822a6936a0a",
        "status" : "passed",
        "time" : {
          "start" : 1713748610509,
          "stop" : 1713748611467,
          "duration" : 958
        }
      }, {
        "uid" : "1ad5d26c31b1eb6a",
        "status" : "passed",
        "time" : {
          "start" : 1713716541702,
          "stop" : 1713716542898,
          "duration" : 1196
        }
      }, {
        "uid" : "3c66f8cb1558b563",
        "status" : "passed",
        "time" : {
          "start" : 1713687675239,
          "stop" : 1713687676053,
          "duration" : 814
        }
      }, {
        "uid" : "fc88eb88d5fd3d47",
        "status" : "passed",
        "time" : {
          "start" : 1713662402038,
          "stop" : 1713662403230,
          "duration" : 1192
        }
      }, {
        "uid" : "e0cd7117acf5c584",
        "status" : "passed",
        "time" : {
          "start" : 1713630129854,
          "stop" : 1713630130663,
          "duration" : 809
        }
      }, {
        "uid" : "abc6b05890b2ead3",
        "status" : "passed",
        "time" : {
          "start" : 1713575665891,
          "stop" : 1713575666905,
          "duration" : 1014
        }
      }, {
        "uid" : "9f0ba0a447fa0057",
        "status" : "passed",
        "time" : {
          "start" : 1713543865051,
          "stop" : 1713543866037,
          "duration" : 986
        }
      }, {
        "uid" : "469fc4dee9f62611",
        "status" : "passed",
        "time" : {
          "start" : 1713514958915,
          "stop" : 1713514959952,
          "duration" : 1037
        }
      }, {
        "uid" : "761c612feb080be0",
        "status" : "passed",
        "time" : {
          "start" : 1713489881273,
          "stop" : 1713489881924,
          "duration" : 651
        }
      }, {
        "uid" : "19c786d907675ee",
        "status" : "passed",
        "time" : {
          "start" : 1713457402049,
          "stop" : 1713457403323,
          "duration" : 1274
        }
      }, {
        "uid" : "f744c01ce437e13",
        "status" : "passed",
        "time" : {
          "start" : 1713428587419,
          "stop" : 1713428588330,
          "duration" : 911
        }
      }, {
        "uid" : "5bdbc967343424ea",
        "status" : "passed",
        "time" : {
          "start" : 1713402838644,
          "stop" : 1713402839594,
          "duration" : 950
        }
      }, {
        "uid" : "e1b7845e01a17d1c",
        "status" : "passed",
        "time" : {
          "start" : 1713371072505,
          "stop" : 1713371073946,
          "duration" : 1441
        }
      }, {
        "uid" : "34900295f999f67a",
        "status" : "passed",
        "time" : {
          "start" : 1713342719303,
          "stop" : 1713342720074,
          "duration" : 771
        }
      }, {
        "uid" : "d2b076fef5adf4eb",
        "status" : "passed",
        "time" : {
          "start" : 1713316482048,
          "stop" : 1713316483065,
          "duration" : 1017
        }
      }, {
        "uid" : "497d18c4d7bf895c",
        "status" : "passed",
        "time" : {
          "start" : 1713285170954,
          "stop" : 1713285171948,
          "duration" : 994
        }
      }, {
        "uid" : "2f76c6ffee6921db",
        "status" : "passed",
        "time" : {
          "start" : 1713255762502,
          "stop" : 1713255764287,
          "duration" : 1785
        }
      }, {
        "uid" : "a9351302e016bfc7",
        "status" : "passed",
        "time" : {
          "start" : 1713230039277,
          "stop" : 1713230040528,
          "duration" : 1251
        }
      }, {
        "uid" : "5dba5cd418cc49a0",
        "status" : "passed",
        "time" : {
          "start" : 1713198154284,
          "stop" : 1713198155249,
          "duration" : 965
        }
      }, {
        "uid" : "7172a9f6721a52d3",
        "status" : "passed",
        "time" : {
          "start" : 1713169133620,
          "stop" : 1713169134818,
          "duration" : 1198
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d1f3a78f0bbb471a.json",
  "parameterValues" : [ ]
}